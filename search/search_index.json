{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Epitools Here we present a new software toolkit to extract the membrane signal from epithelial tissues and analyze it with the aid of computer vision. The development of EpiTools was inspired by the challenges in analyzing time-lapses of growing Drosophila imaginal discs. The folded morphology, the very small apical cell surfaces and the long time series required a new automated cell recognition to accurately study growth dynamics. EpiTools is composed of two main software projects to allow extended modularity First an image processing application for MATLAB to extract the membrane outlines from the experimental data, featuring: Adaptive surface projection A Region growing segmentation algorithm with selective seeding Assisted Seed Correction for expert input An advanced GUI for a guided & reproducible analysis Second a plugin collection for the bioimaging platform icy to interactively analyze the skeleton files, featuring: A network based java data-structure to semantically describe the tissue Automatic estraction & display of development features including: Divisions and Eliminations Junction rearragements (T1,T2) Cell Elongation Patterns Numerous Export options including Spreadsheets, GraphML and Vector Graphics Visualization and measurement of the estimated 3D gridfit surface Clone detection based on a secondary channel Our projects are pulished with Open source licenses. Follow us on BitBucket! EpiTools was published in Developmental Cell (January 2016), freely available at http://dx.doi.org/10.1016/j.devcel.2015.12.012 News 2018-11-06 GUI-Independent EpiTools MATLAB modules * added projection module at github.com/epitools/module_projection * added segmentation module at github.com/epitools/module_segmentation 2018-07-26 EpiTools Icy Plugins v0.9.1 * IMPORTANT Bugfix for EDGE_COLOR_TAG, the length measure in the CSV export was reported incorrectly * new CELL_CLONE overlay (see CellClone page under Icy plugins) to interactively detect clones * new CELL_INTENSITY overlay to measure the junction intensity for all cells * more details in the github release page 2018-07-10 EpiTools Project moved to Github! * new website address: epitools.github.io * new repository: github.com/epitools * download sections are now pointing to the release tab of each repository * example datasets can be found in the epitools-samples repository View older news here . Downloads MATLAB Application ICY Plugins MATLAB source code Plugins surce code For best compatability we reccomend using Matlab 2014a and Icy version 2.0.3 visit our F.A.Q. section for more details on the topic. EpiTools is licensed under GPLv3 you can find the details here . Video Tutorials EpiTools v2 Video Tutorials Icy Plugin Tutorials (with audio!) Make sure to download them to enjoy the HD quality (click on the dots in the lower right corner and click download). Who built EpiTools? Authors Davide Heller (1) Alexander Tournier (5) Andreas Hoppe (2) Simon Restrepo (1) Lorenzo Gatti (1,3,4) Nicolas Tapon (5) Konrad Basler (1) Yanlan Mao (6) Affiliations Institute of Molecular Life Sciences, University of Zurich, Switzerland Digital Imaging Research Centre, Faculty of Science, Engineering and Computing, Kingston University, Kingston-upon-Thames, KT1 2EE, United Kingdom. Institute of Applied Simulations, Z\u00fcrich University of Applied Sciences, Einsiedlerstrasse 31a, 8820 W\u00e4denswil, Switzerland SIB Swiss Institute of Bioinformatics, Quartier Sorge - Batiment Genopode, 1015 Lausanne, Switzerland Apoptosis and Proliferation Control Laboratory, Cancer Research UK, London Research Institute, 44 Lincoln's Inn Fields, London, WC2A 3LY, United Kingdom. MRC Laboratory for Molecular Cell Biology, University College London, Gower Street, London WC1E 6BT, United Kingdom How to cite EpiTools Davide Heller, Andreas Hoppe, Simon Restrepo, Lorenzo Gatti, Alexander L. Tournier, Nicolas Tapon, Konrad Basler, and Yanlan Mao (2016). EpiTools: An Open-Source Image Analysis Toolkit for Quantifying Epithelial Growth Dynamics . Developmental Cell 36 (1) (January): 103\u2013116. doi:10.1016/j.devcel.2015.12.012 Screenshots Matlab Application v2 Icy Plugins Support In case of bugs or improvement suggestions feel free to: File an issue on the relative github repository ( icy or matlab ) . Write to Yanlan Mao Write to Davide Heller Write to Lorenzo Gatti We use Google Analytics to study the traffic of this website. Please find information about the data usage here . This page was written by Lorenzo Gatti and Davide Heller on 26.08.14@16:57 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Home"},{"location":"#welcome-to-epitools","text":"Here we present a new software toolkit to extract the membrane signal from epithelial tissues and analyze it with the aid of computer vision. The development of EpiTools was inspired by the challenges in analyzing time-lapses of growing Drosophila imaginal discs. The folded morphology, the very small apical cell surfaces and the long time series required a new automated cell recognition to accurately study growth dynamics. EpiTools is composed of two main software projects to allow extended modularity First an image processing application for MATLAB to extract the membrane outlines from the experimental data, featuring: Adaptive surface projection A Region growing segmentation algorithm with selective seeding Assisted Seed Correction for expert input An advanced GUI for a guided & reproducible analysis Second a plugin collection for the bioimaging platform icy to interactively analyze the skeleton files, featuring: A network based java data-structure to semantically describe the tissue Automatic estraction & display of development features including: Divisions and Eliminations Junction rearragements (T1,T2) Cell Elongation Patterns Numerous Export options including Spreadsheets, GraphML and Vector Graphics Visualization and measurement of the estimated 3D gridfit surface Clone detection based on a secondary channel Our projects are pulished with Open source licenses. Follow us on BitBucket! EpiTools was published in Developmental Cell (January 2016), freely available at http://dx.doi.org/10.1016/j.devcel.2015.12.012","title":"Welcome to Epitools"},{"location":"#news","text":"2018-11-06 GUI-Independent EpiTools MATLAB modules * added projection module at github.com/epitools/module_projection * added segmentation module at github.com/epitools/module_segmentation 2018-07-26 EpiTools Icy Plugins v0.9.1 * IMPORTANT Bugfix for EDGE_COLOR_TAG, the length measure in the CSV export was reported incorrectly * new CELL_CLONE overlay (see CellClone page under Icy plugins) to interactively detect clones * new CELL_INTENSITY overlay to measure the junction intensity for all cells * more details in the github release page 2018-07-10 EpiTools Project moved to Github! * new website address: epitools.github.io * new repository: github.com/epitools * download sections are now pointing to the release tab of each repository * example datasets can be found in the epitools-samples repository View older news here .","title":"News"},{"location":"#downloads","text":"MATLAB Application ICY Plugins MATLAB source code Plugins surce code For best compatability we reccomend using Matlab 2014a and Icy version 2.0.3 visit our F.A.Q. section for more details on the topic. EpiTools is licensed under GPLv3 you can find the details here .","title":"Downloads"},{"location":"#video-tutorials","text":"EpiTools v2 Video Tutorials Icy Plugin Tutorials (with audio!) Make sure to download them to enjoy the HD quality (click on the dots in the lower right corner and click download).","title":"Video Tutorials"},{"location":"#who-built-epitools","text":"","title":"Who built EpiTools?"},{"location":"#authors","text":"Davide Heller (1) Alexander Tournier (5) Andreas Hoppe (2) Simon Restrepo (1) Lorenzo Gatti (1,3,4) Nicolas Tapon (5) Konrad Basler (1) Yanlan Mao (6)","title":"Authors"},{"location":"#affiliations","text":"Institute of Molecular Life Sciences, University of Zurich, Switzerland Digital Imaging Research Centre, Faculty of Science, Engineering and Computing, Kingston University, Kingston-upon-Thames, KT1 2EE, United Kingdom. Institute of Applied Simulations, Z\u00fcrich University of Applied Sciences, Einsiedlerstrasse 31a, 8820 W\u00e4denswil, Switzerland SIB Swiss Institute of Bioinformatics, Quartier Sorge - Batiment Genopode, 1015 Lausanne, Switzerland Apoptosis and Proliferation Control Laboratory, Cancer Research UK, London Research Institute, 44 Lincoln's Inn Fields, London, WC2A 3LY, United Kingdom. MRC Laboratory for Molecular Cell Biology, University College London, Gower Street, London WC1E 6BT, United Kingdom","title":"Affiliations"},{"location":"#how-to-cite-epitools","text":"Davide Heller, Andreas Hoppe, Simon Restrepo, Lorenzo Gatti, Alexander L. Tournier, Nicolas Tapon, Konrad Basler, and Yanlan Mao (2016). EpiTools: An Open-Source Image Analysis Toolkit for Quantifying Epithelial Growth Dynamics . Developmental Cell 36 (1) (January): 103\u2013116. doi:10.1016/j.devcel.2015.12.012","title":"How to cite EpiTools"},{"location":"#screenshots","text":"Matlab Application v2 Icy Plugins","title":"Screenshots"},{"location":"#support","text":"In case of bugs or improvement suggestions feel free to: File an issue on the relative github repository ( icy or matlab ) . Write to Yanlan Mao Write to Davide Heller Write to Lorenzo Gatti We use Google Analytics to study the traffic of this website. Please find information about the data usage here .","title":"Support"},{"location":"#this-page-was-written-by-lorenzo-gatti-and-davide-heller-on-2608141657","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti and Davide Heller on 26.08.14@16:57"},{"location":"Analysis_Modules/00_projection/","text":"Selective Plane Projection for Z-Stacks Summary Creates a 2D projection from a Z-stack by selectively choosing from which plane to extract each pixel based on a surface estimation. Assumptions The input image is composed of several z planes representing a cohesive tissue which can be approximated by a 3D surface. In order to exclude another surface from being also projected the latter has to have a lower intensity or at least a smaller number of high intensity points than the region of interest (ROI). Main algorithm steps: 1st Surface estimation [1] using the highest intensities in the sample (1st quartile) Application of a cutoff distance to confine the ROI 2nd Surface estimation [1] using the highest intensities in the confined ROI Projection of the Z-Stack on a 2D plane using (3) Output files in the Analysis/ folder File Description ProjIm.mat Matlab matrix file containing the projected image for each frame Surface.mat Matlab matrix file containing the original z-plane index for each pixel in ProjIm.mat vtk/gridfit_frame_###.vtk Surface files for every frame containing the coordinates of the 2nd gridFit estimation in ASCII format (1 grid point per line: x,y,z) (see CellSurface plugin for further usage) [ ! output added starting from version 2.1.5 ] Parameters Parameter: Smoothing Radius Defines the amount of gaussian blur to be applied on the image before estimating the surface (the original image data is preserved for the modules to follow). Selecting a higher amount of blurring will make the image smoother but mask the details. units [pixels] recommended range [0.1 - 5] Parameter: Surface Smoothness 1 Input parameter for the first gridFit\u00a9 estimation of the highest intensity surface. Selecting a larger value will make the surface smoother but less accurate. The parameter should be tuned such that the surface is detailed enough to capture the ROI but without containing points from the outer region (e.g. visualized by spike-like departures). units [positive scalar] recommended range [30 - 100] Parameter: Cutoff distance Defines the region of interest in absolute terms from the first estimated surface. Selecting a larger cutoff distance will include more signal from above and below the estimated surface. It is important that the filtered set of high intensity points should include only signal from the ROI. units [z-plane distance] recommended range [1-3, decimals allowed] Parameter: Surface Smoothness 2 Input parameter for the 2nd gridFit\u00a9 estimation of the intensity surface. This surface estimation is based only on the points from the previous part (2) and can therefore be more detailed, i.e. less smooth. It is important to estimate the detailed morphology to ensure that the correct plane is extracted for every pixel location of the ROI. units [positive scalar] recommended range [20-50] Debugging Turn this switch on to see the intermediate estimated surfaces. Warning! Do only apply on single stacks generates a lot of images. References [1] Surface Fitting using gridfit by John D\u2019Errico Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 10.11.15@17:40 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"00 projection"},{"location":"Analysis_Modules/00_projection/#selective-plane-projection-for-z-stacks","text":"","title":"Selective Plane Projection for Z-Stacks"},{"location":"Analysis_Modules/00_projection/#summary","text":"Creates a 2D projection from a Z-stack by selectively choosing from which plane to extract each pixel based on a surface estimation.","title":"Summary"},{"location":"Analysis_Modules/00_projection/#assumptions","text":"The input image is composed of several z planes representing a cohesive tissue which can be approximated by a 3D surface. In order to exclude another surface from being also projected the latter has to have a lower intensity or at least a smaller number of high intensity points than the region of interest (ROI).","title":"Assumptions"},{"location":"Analysis_Modules/00_projection/#main-algorithm-steps","text":"1st Surface estimation [1] using the highest intensities in the sample (1st quartile) Application of a cutoff distance to confine the ROI 2nd Surface estimation [1] using the highest intensities in the confined ROI Projection of the Z-Stack on a 2D plane using (3)","title":"Main algorithm steps:"},{"location":"Analysis_Modules/00_projection/#output-files-in-the-analysis-folder","text":"File Description ProjIm.mat Matlab matrix file containing the projected image for each frame Surface.mat Matlab matrix file containing the original z-plane index for each pixel in ProjIm.mat vtk/gridfit_frame_###.vtk Surface files for every frame containing the coordinates of the 2nd gridFit estimation in ASCII format (1 grid point per line: x,y,z) (see CellSurface plugin for further usage) [ ! output added starting from version 2.1.5 ]","title":"Output files in the Analysis/ folder"},{"location":"Analysis_Modules/00_projection/#parameters","text":"Parameter: Smoothing Radius Defines the amount of gaussian blur to be applied on the image before estimating the surface (the original image data is preserved for the modules to follow). Selecting a higher amount of blurring will make the image smoother but mask the details. units [pixels] recommended range [0.1 - 5] Parameter: Surface Smoothness 1 Input parameter for the first gridFit\u00a9 estimation of the highest intensity surface. Selecting a larger value will make the surface smoother but less accurate. The parameter should be tuned such that the surface is detailed enough to capture the ROI but without containing points from the outer region (e.g. visualized by spike-like departures). units [positive scalar] recommended range [30 - 100] Parameter: Cutoff distance Defines the region of interest in absolute terms from the first estimated surface. Selecting a larger cutoff distance will include more signal from above and below the estimated surface. It is important that the filtered set of high intensity points should include only signal from the ROI. units [z-plane distance] recommended range [1-3, decimals allowed] Parameter: Surface Smoothness 2 Input parameter for the 2nd gridFit\u00a9 estimation of the intensity surface. This surface estimation is based only on the points from the previous part (2) and can therefore be more detailed, i.e. less smooth. It is important to estimate the detailed morphology to ensure that the correct plane is extracted for every pixel location of the ROI. units [positive scalar] recommended range [20-50]","title":"Parameters"},{"location":"Analysis_Modules/00_projection/#debugging","text":"Turn this switch on to see the intermediate estimated surfaces. Warning! Do only apply on single stacks generates a lot of images.","title":"Debugging"},{"location":"Analysis_Modules/00_projection/#references","text":"[1] Surface Fitting using gridfit by John D\u2019Errico","title":"References"},{"location":"Analysis_Modules/00_projection/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Analysis_Modules/00_projection/#this-page-was-written-by-davide-heller-on-1011151740","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 10.11.15@17:40"},{"location":"Analysis_Modules/01_registration/","text":"Registration of Time Series Summary If the sample is characterized by movement during the acquisition the time series can be corrected by aligning successive frames to the first. Assumptions The method assumes a 2D time series as input Options Parameter: StackReg Sends the time series to imageJ where the plugin StackReg is applied with a 'rigid' transformation model. Rigid: only translation or rotations i.e. no scaling Attention: make sure to allocate enough Java Heap Space in Matlab to be able to process the image Reference: A Pyramid Approach to Subpixel Registration Based on Intensity P. Th\u00e9venaz, U.E. Ruttimann, M. Unser IEEE Transactions on Image Processing, vol. 7, no. 1, pp. 27-41, January 1998. StackReg website Parameter: EpiTools's registration [beta] This experimental registration method aligns the images in two steps: registration based on big features correction based on small features Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 10.09.14@17.08 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Registration of Time Series #"},{"location":"Analysis_Modules/01_registration/#registration-of-time-series","text":"","title":"Registration of Time Series"},{"location":"Analysis_Modules/01_registration/#summary","text":"If the sample is characterized by movement during the acquisition the time series can be corrected by aligning successive frames to the first.","title":"Summary"},{"location":"Analysis_Modules/01_registration/#assumptions","text":"The method assumes a 2D time series as input","title":"Assumptions"},{"location":"Analysis_Modules/01_registration/#options","text":"Parameter: StackReg Sends the time series to imageJ where the plugin StackReg is applied with a 'rigid' transformation model. Rigid: only translation or rotations i.e. no scaling Attention: make sure to allocate enough Java Heap Space in Matlab to be able to process the image Reference: A Pyramid Approach to Subpixel Registration Based on Intensity P. Th\u00e9venaz, U.E. Ruttimann, M. Unser IEEE Transactions on Image Processing, vol. 7, no. 1, pp. 27-41, January 1998. StackReg website Parameter: EpiTools's registration [beta] This experimental registration method aligns the images in two steps: registration based on big features correction based on small features","title":"Options"},{"location":"Analysis_Modules/01_registration/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Analysis_Modules/01_registration/#this-page-was-written-by-davide-heller-on-1009141708","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 10.09.14@17.08"},{"location":"Analysis_Modules/02_clahe/","text":"Contrast limited adaptive histogram equalization Summary Applies the matlab command adapthisteq \u00ae to reduce contrast differences throughout the image. From the matlab documentation: CLAHE operates on small regions in the image, called tiles, rather than the entire image. Each tile's contrast is enhanced, so that the histogram of the output region approximately matches the histogram specified by the 'Distribution' parameter. The neighboring tiles are then combined using bilinear interpolation to eliminate artificially induced boundaries. The contrast, especially in homogeneous areas, can be limited to avoid amplifying any noise that might be present in the image Assumptions The method assumes 2D images in grayscale Parameters Parameter: Enhancement limit Real scalar in the range [0 1] that specifies a contrast enhancement limit. Higher numbers result in more contrast. units [positive real value] recommended range : [0.01 0.05] Parameter: Enhancement width Discribes the size of the tiles used by the clahe method units [pixels] recommended range [20 30] Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 10.09.14@17.08 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"02 clahe"},{"location":"Analysis_Modules/02_clahe/#contrast-limited-adaptive-histogram-equalization","text":"","title":"Contrast limited adaptive histogram equalization"},{"location":"Analysis_Modules/02_clahe/#summary","text":"Applies the matlab command adapthisteq \u00ae to reduce contrast differences throughout the image. From the matlab documentation: CLAHE operates on small regions in the image, called tiles, rather than the entire image. Each tile's contrast is enhanced, so that the histogram of the output region approximately matches the histogram specified by the 'Distribution' parameter. The neighboring tiles are then combined using bilinear interpolation to eliminate artificially induced boundaries. The contrast, especially in homogeneous areas, can be limited to avoid amplifying any noise that might be present in the image","title":"Summary"},{"location":"Analysis_Modules/02_clahe/#assumptions","text":"The method assumes 2D images in grayscale","title":"Assumptions"},{"location":"Analysis_Modules/02_clahe/#parameters","text":"Parameter: Enhancement limit Real scalar in the range [0 1] that specifies a contrast enhancement limit. Higher numbers result in more contrast. units [positive real value] recommended range : [0.01 0.05] Parameter: Enhancement width Discribes the size of the tiles used by the clahe method units [pixels] recommended range [20 30]","title":"Parameters"},{"location":"Analysis_Modules/02_clahe/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Analysis_Modules/02_clahe/#this-page-was-written-by-davide-heller-on-1009141708","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 10.09.14@17.08"},{"location":"Analysis_Modules/03_segmentation/","text":"Region growing segmentation Summary Segmentation procedure to detect the individual cells in the image and find the boundaries with a seed based region growing algorithm. Assumptions The input image is assumed to have high intensity membrane signal on low intensity background. Algorithm Steps 1.Seeding cells Detects individual cells by placing a seed for each cell region. Seeds are iteratively placed by raising an intensity level (low to high intensity). At the same time seeds are also grown into regions to detect whether an immediate neighbor region could be joined based on two thresholds. The first parameter to optimize for this step is the Gaussian blur kernel . After this the minimum cell area size and minimal membrane intensity can be modified to reduce over-seeding of the cells. The reference figure when the debug option is active is Figure 2: First seeding . Parameter: Gaussian Blur Kernel Initial gaussian blur to reduce the the sensitivity of the seeding Increasing the kernel size reduces the number of seeds while reducing it increases them. Given the removal steps to follow it is better to slightly overseed the cells. units [scalar] recommended range [0-5, decimals] Parameter: Minimum cell area Area threshold to merge touching regions with insufficient cell area. The higher the threshold the more cells will be merged in the beginning because of insufficient size. units [pixels] recommended value [20] Parameter: Minimal membrane intensity Intensity threshold up to which regions which touch are merged, i.e. the membrane/boundary intensity is insufficient for two independent cells. The higher the threshold, the more seeds will be initially merged. units [intensity/pixel value] recommended value [20] 2.Merge Seeds Regions which touch with a low boundary signal after the initial seeding are analyzed to avoid seeding a cell multiple times. The regions of the initial seeds are used to analyze the boundary signal. The reference figure when the debug option is active is Figure 3: Seeding after merging . Parameter: Boundary Low Intensity Ratio Percentage of pixels in the boundary below the following intensity threshold seedIntensity + std(cell background)/2 e.g. ratio = 0.35: 35% of the pixels in the boundary have a value lower than the threshold above. units [-] recommended value [0.35] 3.Region growing Segmentation algorithm to find the cell boundaries starting from the seeds. The strategy is very similar to the watershedding algorithm. The reference figure when the debug option is active is Figure 4: First cell boundaries . parameter: Gaussian Blur Kernel Gaussian blur to reduce intensity fluctuations that could affect the segmentation algorithm. The higher the kernel the less segmented the image will be washing out weak membrane signal. units [scalar] recommended range [0-5, decimals] 4.Bad region removal Method to avoid false positives, i.e. regions with insufficient boundary signal or that are too large to be a cell. This applies especially to outer regions that have not been correctly detected. The reference figure when the debug option is active is Figure 5: Boundaries after poor cell removal parameter: Largest Cell Area An upper threshold to how big a cell can be. If a cell region region is greater it is removed. units [pixels] default value [3000] parameter: Minimal mean intensity A lower threshold to the minimal mean intensity on the boundary of a cell If a cell has a lower mean intensity on it's boundary than the threshold it is eliminated units [intensity] default value [30] Additional Parameters parameter: Use Clahe Image The segmentation will use the image processed with CLAHE In order to run, this option requires that the clahe module was executed beforehand Activate this option when an uneven background illumination induces a poor segmentation performance Debug Set the debugging flag to view intermediate results ( Attention use preferably in test mode) Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 30.09.14@15.38 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"03 segmentation"},{"location":"Analysis_Modules/03_segmentation/#region-growing-segmentation","text":"","title":"Region growing segmentation"},{"location":"Analysis_Modules/03_segmentation/#summary","text":"Segmentation procedure to detect the individual cells in the image and find the boundaries with a seed based region growing algorithm.","title":"Summary"},{"location":"Analysis_Modules/03_segmentation/#assumptions","text":"The input image is assumed to have high intensity membrane signal on low intensity background.","title":"Assumptions"},{"location":"Analysis_Modules/03_segmentation/#algorithm-steps","text":"","title":"Algorithm Steps"},{"location":"Analysis_Modules/03_segmentation/#1seeding-cells","text":"Detects individual cells by placing a seed for each cell region. Seeds are iteratively placed by raising an intensity level (low to high intensity). At the same time seeds are also grown into regions to detect whether an immediate neighbor region could be joined based on two thresholds. The first parameter to optimize for this step is the Gaussian blur kernel . After this the minimum cell area size and minimal membrane intensity can be modified to reduce over-seeding of the cells. The reference figure when the debug option is active is Figure 2: First seeding . Parameter: Gaussian Blur Kernel Initial gaussian blur to reduce the the sensitivity of the seeding Increasing the kernel size reduces the number of seeds while reducing it increases them. Given the removal steps to follow it is better to slightly overseed the cells. units [scalar] recommended range [0-5, decimals] Parameter: Minimum cell area Area threshold to merge touching regions with insufficient cell area. The higher the threshold the more cells will be merged in the beginning because of insufficient size. units [pixels] recommended value [20] Parameter: Minimal membrane intensity Intensity threshold up to which regions which touch are merged, i.e. the membrane/boundary intensity is insufficient for two independent cells. The higher the threshold, the more seeds will be initially merged. units [intensity/pixel value] recommended value [20]","title":"1.Seeding cells"},{"location":"Analysis_Modules/03_segmentation/#2merge-seeds","text":"Regions which touch with a low boundary signal after the initial seeding are analyzed to avoid seeding a cell multiple times. The regions of the initial seeds are used to analyze the boundary signal. The reference figure when the debug option is active is Figure 3: Seeding after merging . Parameter: Boundary Low Intensity Ratio Percentage of pixels in the boundary below the following intensity threshold seedIntensity + std(cell background)/2 e.g. ratio = 0.35: 35% of the pixels in the boundary have a value lower than the threshold above. units [-] recommended value [0.35]","title":"2.Merge Seeds"},{"location":"Analysis_Modules/03_segmentation/#3region-growing","text":"Segmentation algorithm to find the cell boundaries starting from the seeds. The strategy is very similar to the watershedding algorithm. The reference figure when the debug option is active is Figure 4: First cell boundaries . parameter: Gaussian Blur Kernel Gaussian blur to reduce intensity fluctuations that could affect the segmentation algorithm. The higher the kernel the less segmented the image will be washing out weak membrane signal. units [scalar] recommended range [0-5, decimals]","title":"3.Region growing"},{"location":"Analysis_Modules/03_segmentation/#4bad-region-removal","text":"Method to avoid false positives, i.e. regions with insufficient boundary signal or that are too large to be a cell. This applies especially to outer regions that have not been correctly detected. The reference figure when the debug option is active is Figure 5: Boundaries after poor cell removal parameter: Largest Cell Area An upper threshold to how big a cell can be. If a cell region region is greater it is removed. units [pixels] default value [3000] parameter: Minimal mean intensity A lower threshold to the minimal mean intensity on the boundary of a cell If a cell has a lower mean intensity on it's boundary than the threshold it is eliminated units [intensity] default value [30]","title":"4.Bad region removal"},{"location":"Analysis_Modules/03_segmentation/#additional-parameters","text":"parameter: Use Clahe Image The segmentation will use the image processed with CLAHE In order to run, this option requires that the clahe module was executed beforehand Activate this option when an uneven background illumination induces a poor segmentation performance","title":"Additional Parameters"},{"location":"Analysis_Modules/03_segmentation/#debug","text":"Set the debugging flag to view intermediate results ( Attention use preferably in test mode)","title":"Debug"},{"location":"Analysis_Modules/03_segmentation/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Analysis_Modules/03_segmentation/#this-page-was-written-by-davide-heller-on-3009141538","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 30.09.14@15.38"},{"location":"Analysis_Modules/04_polygonMask/","text":"Polygonal Mask Summary Create a polygonal mask to ease the correction step (hide labels and seeds that are not within the mask) and allow cropping the final skeletons if desired. Assumptions To create the mask the segmentation module has to be run first in order to have the cell labels. Usage The ui interaction is build upon the roipoly MATLAB tool. Behavior as described in the MATLAB documentation: Use roipoly to specify a polygonal region of interest (ROI) within an image. roipoly returns a binary image that you can use as a mask for masked filtering. With the polygon tool active, the pointer changes to cross hairs when you move the pointer over the image in the figure. Using the mouse, you specify the region by selecting vertices of the polygon. You can move or resize the polygon using the mouse. When you are finished positioning and sizing the polygon, create the mask by double-clicking, or by right-clicking inside the region and selecting Create mask from the context menu. Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 10.09.14@17.08 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"04 polygonMask"},{"location":"Analysis_Modules/04_polygonMask/#polygonal-mask","text":"","title":"Polygonal Mask"},{"location":"Analysis_Modules/04_polygonMask/#summary","text":"Create a polygonal mask to ease the correction step (hide labels and seeds that are not within the mask) and allow cropping the final skeletons if desired.","title":"Summary"},{"location":"Analysis_Modules/04_polygonMask/#assumptions","text":"To create the mask the segmentation module has to be run first in order to have the cell labels.","title":"Assumptions"},{"location":"Analysis_Modules/04_polygonMask/#usage","text":"The ui interaction is build upon the roipoly MATLAB tool. Behavior as described in the MATLAB documentation: Use roipoly to specify a polygonal region of interest (ROI) within an image. roipoly returns a binary image that you can use as a mask for masked filtering. With the polygon tool active, the pointer changes to cross hairs when you move the pointer over the image in the figure. Using the mouse, you specify the region by selecting vertices of the polygon. You can move or resize the polygon using the mouse. When you are finished positioning and sizing the polygon, create the mask by double-clicking, or by right-clicking inside the region and selecting Create mask from the context menu.","title":"Usage"},{"location":"Analysis_Modules/04_polygonMask/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Analysis_Modules/04_polygonMask/#this-page-was-written-by-davide-heller-on-1009141708","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 10.09.14@17.08"},{"location":"Analysis_Modules/05_tracking/","text":"Tracking Corrections Summary This module helps to reduce the amount of segmentation errors in the image by tracking all cell seeds throughout every frame. The GUI shows the seeds and the cell boundaries obtained from the segmentation module and uses the registered image as background. Assumptions Incompletely tracked cells are often due to segmentation mistakes which can be corrected by manual supervision. Manual intervention is currently defined as placing and removing seeds by simple clicking actions. The algorithm will automatically recalculate the trajectories when a modification occurs. Parameters Parameter: Tracking Radius Defines the maximal distance which every cell is allowed to travel from frame to frame This parameter limits the units [pixels] default value : 15 Usage Working modes Overview Default visualization which gives the user an overview of the sample. Zoom Upon clicking on the overview the image will changed into a close-up (zoom) of the sample. Only here it is possible to manually edit the seeding. Trajectories are each assigned an individual color Larger seeds are correctly tracked Smaller seeds have an incomplete track a mark on the right signals a problem towards the end of the time lapse a mark on the left signals a problem towards the beginning of the time lapse Main Interactions Switch working modes Click on the portion of the overview to work on Press the space bar to return to the overview. Add or delete seeds For this action the zoom mode must be active Click on an empty region to add a seed Click on a present seed to remove it Move in time scroll with mouse right/left arrows slider Inspect incomplete track source press i (Inspect) and click on an incomplete seed (small) to be guided to the frame where the tracking is incomplete. Accept incomplete track Division, Eliminations as well as poor imaging may require to leave a track incomplete. To mark the seed as reviewed press o (Ok) and click on the incomplete seed. The seed will be crossed by a horizontal bar to visualize the action. Save To save the progress at any time press s A file containing the modifications will be saved into the analysis directory with a time stamp Advanced Interactions Hide segmentation review the underlying image by pressing h (hide), press again to show Delete track delete an entire cell track by pressing t (Track deletion) and clicking on the seed Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 30.09.14@17:30 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"05 tracking"},{"location":"Analysis_Modules/05_tracking/#tracking-corrections","text":"","title":"Tracking Corrections"},{"location":"Analysis_Modules/05_tracking/#summary","text":"This module helps to reduce the amount of segmentation errors in the image by tracking all cell seeds throughout every frame. The GUI shows the seeds and the cell boundaries obtained from the segmentation module and uses the registered image as background.","title":"Summary"},{"location":"Analysis_Modules/05_tracking/#assumptions","text":"Incompletely tracked cells are often due to segmentation mistakes which can be corrected by manual supervision. Manual intervention is currently defined as placing and removing seeds by simple clicking actions. The algorithm will automatically recalculate the trajectories when a modification occurs.","title":"Assumptions"},{"location":"Analysis_Modules/05_tracking/#parameters","text":"Parameter: Tracking Radius Defines the maximal distance which every cell is allowed to travel from frame to frame This parameter limits the units [pixels] default value : 15","title":"Parameters"},{"location":"Analysis_Modules/05_tracking/#usage","text":"Working modes Overview Default visualization which gives the user an overview of the sample. Zoom Upon clicking on the overview the image will changed into a close-up (zoom) of the sample. Only here it is possible to manually edit the seeding. Trajectories are each assigned an individual color Larger seeds are correctly tracked Smaller seeds have an incomplete track a mark on the right signals a problem towards the end of the time lapse a mark on the left signals a problem towards the beginning of the time lapse Main Interactions Switch working modes Click on the portion of the overview to work on Press the space bar to return to the overview. Add or delete seeds For this action the zoom mode must be active Click on an empty region to add a seed Click on a present seed to remove it Move in time scroll with mouse right/left arrows slider Inspect incomplete track source press i (Inspect) and click on an incomplete seed (small) to be guided to the frame where the tracking is incomplete. Accept incomplete track Division, Eliminations as well as poor imaging may require to leave a track incomplete. To mark the seed as reviewed press o (Ok) and click on the incomplete seed. The seed will be crossed by a horizontal bar to visualize the action. Save To save the progress at any time press s A file containing the modifications will be saved into the analysis directory with a time stamp Advanced Interactions Hide segmentation review the underlying image by pressing h (hide), press again to show Delete track delete an entire cell track by pressing t (Track deletion) and clicking on the seed","title":"Usage"},{"location":"Analysis_Modules/05_tracking/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Analysis_Modules/05_tracking/#this-page-was-written-by-davide-heller-on-3009141730","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 30.09.14@17:30"},{"location":"Analysis_Modules/06_skeleton/","text":"Skeleton Generation Summary The cell label data structure is transformed into binary skeletons for every frame. A skeleton depicts the boundaries between cells with a white 1 pixel line (255) over black background (0). File format is PNG. Assumptions The segmentation module needs to be run before this module Parameters Parameter: Use Polygonal Mask Allows to crop the skeletons before saving them by applying the polygonal mask created beforehand. Additional requirement : polygonal mask module Parameter: Use Corrected Segmentation Allows to use the corrected segmentation results instead of the first segmentation results. Additional requirement : Tracking & Re-Segmentation Module Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 10.09.14@17.08 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"06 skeleton"},{"location":"Analysis_Modules/06_skeleton/#skeleton-generation","text":"","title":"Skeleton Generation"},{"location":"Analysis_Modules/06_skeleton/#summary","text":"The cell label data structure is transformed into binary skeletons for every frame. A skeleton depicts the boundaries between cells with a white 1 pixel line (255) over black background (0). File format is PNG.","title":"Summary"},{"location":"Analysis_Modules/06_skeleton/#assumptions","text":"The segmentation module needs to be run before this module","title":"Assumptions"},{"location":"Analysis_Modules/06_skeleton/#parameters","text":"Parameter: Use Polygonal Mask Allows to crop the skeletons before saving them by applying the polygonal mask created beforehand. Additional requirement : polygonal mask module Parameter: Use Corrected Segmentation Allows to use the corrected segmentation results instead of the first segmentation results. Additional requirement : Tracking & Re-Segmentation Module","title":"Parameters"},{"location":"Analysis_Modules/06_skeleton/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Analysis_Modules/06_skeleton/#this-page-was-written-by-davide-heller-on-1009141708","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 10.09.14@17.08"},{"location":"Icy_Plugins/00_Installation/","text":"Installation of the EpiTools plugins for ICY Welcome to the EpiTool plugins for ICY. This collection of plugins for the bioimaging platform icy allows to transform skeleton images into interactive overlays to explore and analyze your data. Warning: if your icy background appears black instead of grey, the plugins will be affected an unsolved memory leak. Most reported cases appear in co-occurrence with Apple Retina\u00ae screens. Temporary Fix: Use an external monitor with the macbook lid closed Download & Move the files in the right place Download the package cellGraph.zip from here Extract the package Place the plugin folder davhelle into the icy plugin folder (e.g. programs/icy/plugins) Place the workspace file EpiTools.xml into the icy workspace folder (e.g. programs/icy/workspace) The folder test does not require any particular location To update just replace the cellGraph_v#.#.#.jar in the plugin folder davhelle Enable the EpiTools Workspace in Icy In order to add the EpiTools toolbar to your icy installation Enter the preferences (icy logo > preferences) Go to local workspace menu Enable the EpiTools workspace by checking the tickbox (see image below) Confirm by clicking Ok , you will be asked to restart icy to apply the changes. After the restart should see the following screen when opening icy and selecting the Epitools Bar. Install the required plugins for icy In order to run the EpiTools plugins, only one additional icy plugin is required, EzPlug . This is a plugin which facilitates the building of graphical user interfaces and is used by all EpiTools Plugins. To install it simply write in the icy search field the following plugin name [network connection required]: EzPlug SDK (most likely already installed) 3D Mesh ROI (only for the CellSurface plugin) Test if the installation was successfull To test the installation: Run the TestLoader Plugin in the EpiTools Bar/or through the search bar You will be asked to locate the folder test from the download package Shortely after a new viewer should be visualized (image below) Learn about what can be done with it in the next section Installation video tutorial For a complete installation of icy and CellGraph please watch our video tutorial Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 27.03.2015@09:28 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Installation of the EpiTools plugins for ICY"},{"location":"Icy_Plugins/00_Installation/#installation-of-the-epitools-plugins-for-icy","text":"Welcome to the EpiTool plugins for ICY. This collection of plugins for the bioimaging platform icy allows to transform skeleton images into interactive overlays to explore and analyze your data. Warning: if your icy background appears black instead of grey, the plugins will be affected an unsolved memory leak. Most reported cases appear in co-occurrence with Apple Retina\u00ae screens. Temporary Fix: Use an external monitor with the macbook lid closed","title":"Installation of the EpiTools plugins for ICY"},{"location":"Icy_Plugins/00_Installation/#download-move-the-files-in-the-right-place","text":"Download the package cellGraph.zip from here Extract the package Place the plugin folder davhelle into the icy plugin folder (e.g. programs/icy/plugins) Place the workspace file EpiTools.xml into the icy workspace folder (e.g. programs/icy/workspace) The folder test does not require any particular location To update just replace the cellGraph_v#.#.#.jar in the plugin folder davhelle","title":"Download &amp; Move the files in the right place"},{"location":"Icy_Plugins/00_Installation/#enable-the-epitools-workspace-in-icy","text":"In order to add the EpiTools toolbar to your icy installation Enter the preferences (icy logo > preferences) Go to local workspace menu Enable the EpiTools workspace by checking the tickbox (see image below) Confirm by clicking Ok , you will be asked to restart icy to apply the changes. After the restart should see the following screen when opening icy and selecting the Epitools Bar.","title":"Enable the EpiTools Workspace in Icy"},{"location":"Icy_Plugins/00_Installation/#install-the-required-plugins-for-icy","text":"In order to run the EpiTools plugins, only one additional icy plugin is required, EzPlug . This is a plugin which facilitates the building of graphical user interfaces and is used by all EpiTools Plugins. To install it simply write in the icy search field the following plugin name [network connection required]: EzPlug SDK (most likely already installed) 3D Mesh ROI (only for the CellSurface plugin)","title":"Install the required plugins for icy"},{"location":"Icy_Plugins/00_Installation/#test-if-the-installation-was-successfull","text":"To test the installation: Run the TestLoader Plugin in the EpiTools Bar/or through the search bar You will be asked to locate the folder test from the download package Shortely after a new viewer should be visualized (image below) Learn about what can be done with it in the next section","title":"Test if the installation was successfull"},{"location":"Icy_Plugins/00_Installation/#installation-video-tutorial","text":"For a complete installation of icy and CellGraph please watch our video tutorial","title":"Installation video tutorial"},{"location":"Icy_Plugins/00_Installation/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Icy_Plugins/00_Installation/#this-page-was-written-by-davide-heller-on-270320150928","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 27.03.2015@09:28"},{"location":"Icy_Plugins/01_CellOverlay/","text":"Generating overlays using CellOverlay After installing the plugins and loading the test file we are now ready to generate overlays. In fact two overlay are already present if we look at the Layer menu in the icy menu on the right. By clicking on the eye icon on the side of each overlay you can toggle the presence. For a general overview you can watch our first CellOverlay tutorial video too! Notice: This example uses the original skeleton image as background but the overlays can be generated on any other image as well (e.g. raw image, second channel ecc.) the only limitation is that dimensions must match (x,y,t). Create a new overlay Let's add a new overlay to the test viewer (click again on TestLoader if you closed it). Here we will add a graph view overlay which visualizes the neighborhood connectivity of every cell. Open the CellOverlay plugin from the toolbar Select GRAPH VIEW from the Overlay list (see summary figure below) Generate the overlay by clicking Add Overlay on the plugin bottom A new overlay is now present on the image and a new entry in the Layer menu: Adjusting a gradient color overlay When the overlay displays a gradient through a color scheme like in the Area example the user can adjust the scheme through the 4 parameters in the OptionPanel in the Layer menu (see image below). The Gradient Maximum and Gradient Minimum parameters set the extremes of the gradient (everything above and below has constant color). The Gradient Scale is a multiplier between 0 and 1 to scale the color gradient into a particular range of colors (see HSV color scheme for more information about the color space). The Gradient Shift is complementary to the scale, shifting the scaled color gradient into the desired region by adding a constant factor between 0 and 1. Current Overlays with Color Gradient: Area Gradient Voronoi Area Difference Division Orientation Ellipse Elongation Ratio Ellipse Fit With respect to ROI Edge Intensity Export an overlay While in the later section CellExport we show how to export many data points at once, every overlay has a custom export option. This option can be reached from the layer option menu, where you can also adapt the opacity or delete the overlay. Here we show howt exprot the area of cells from the CELL_AREA overlay: Click on the layer name to make the export option appear Click on the export button and choose where to save the spreadsheet Every sheet in the file will contain the area of the cells in the respective frame Available Overlays Currently the following overlays are available, divided by category: Basic CELL_OUTLINE CELL_AREA CELL_SEGMENTATION_BORDER Draws cell centroids and cell outlines in a color of choice Colors the cells according to their area size in a gradient fashion. Gradient threshold can be dynamically changed, just move the pointer to back to the image to refresh Shows where the border of the segmentation was identified tutorial video Tesselation CELL_VORONOI_DIAGRAM CELL_POLYGON_CLASS CELL_GRAPH_VIEW displays the voronoi diagram computed from the cell centroids Displays the number of neighbors each cell has with color code or number Shows the connectivity (neighbors) of each cell tutorial video Dynamic (tracking required) TRACKING_REVIEW TRACKING_DISPLACEMENT DIVISIONS_AND_ELIMINATIONS Reviews the tracking in case it has been eliminated or to highlight different aspects Shows how much a centroid moved from one frame to the next. Helpful to spot mistakes Highlights the cells that underwent division or elimination during the time lapse tutorial video ---- tutorial video Interactive CELL_COLOR_TAG EDGE_COLOR_TAG Interactively mark cells with several colors of choice and follow the cells over-time Interactively mark edges with several colors of choice and follow the edges over-time tutorial video tutorial video Edge / Junction Analysis EDGE_T1_TRANSITIONS EDGE_STABILITY EDGE_INTENSITY Computes and displays the T1 transitions present in the time lapse Displays a color code for how stable edges are, how long they can be tracked Transforms the edge geometries into ROIs and displays the underlying intensity of the image Shape analysis ELLIPSE_FIT ELLIPSE_ELONGATION_RATIO ELLIPSE_FIT_WRT_POINT_ROI Fits an ellipse to each cell geometry and displays the longest axis Color codes the cell according to their elongation ratio and writes the elongation factor within every cell Highlights the orienation of the cell with respect to a user defined ROI (green point). The ROI can be interactively moved tutorial video Futher overlays DIVSION_ORIENTATION: Color codes the dividing cells according to their new junction orientation (Longest axis of mother cell vs New junction) TRACKING_STABLE_ONLY: Outlines the cells that are completely tracked throughout the movie or till the division TRACKING_CORRECTION_HINTS: Help identifying cells which have been segmented wrongly, best used in combination with CellEditor plugin EDGE_ORIENTATION: useful to extract orientation of individual edges with combined intensity measurement CELL_PROJECTION: see CellSurface section Learn how to load your own graph structure into memory in the next section Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 12.11.2015@15:37 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Generating overlays using CellOverlay"},{"location":"Icy_Plugins/01_CellOverlay/#generating-overlays-using-celloverlay","text":"After installing the plugins and loading the test file we are now ready to generate overlays. In fact two overlay are already present if we look at the Layer menu in the icy menu on the right. By clicking on the eye icon on the side of each overlay you can toggle the presence. For a general overview you can watch our first CellOverlay tutorial video too! Notice: This example uses the original skeleton image as background but the overlays can be generated on any other image as well (e.g. raw image, second channel ecc.) the only limitation is that dimensions must match (x,y,t).","title":"Generating overlays using CellOverlay"},{"location":"Icy_Plugins/01_CellOverlay/#create-a-new-overlay","text":"Let's add a new overlay to the test viewer (click again on TestLoader if you closed it). Here we will add a graph view overlay which visualizes the neighborhood connectivity of every cell. Open the CellOverlay plugin from the toolbar Select GRAPH VIEW from the Overlay list (see summary figure below) Generate the overlay by clicking Add Overlay on the plugin bottom A new overlay is now present on the image and a new entry in the Layer menu:","title":"Create a new overlay"},{"location":"Icy_Plugins/01_CellOverlay/#adjusting-a-gradient-color-overlay","text":"When the overlay displays a gradient through a color scheme like in the Area example the user can adjust the scheme through the 4 parameters in the OptionPanel in the Layer menu (see image below). The Gradient Maximum and Gradient Minimum parameters set the extremes of the gradient (everything above and below has constant color). The Gradient Scale is a multiplier between 0 and 1 to scale the color gradient into a particular range of colors (see HSV color scheme for more information about the color space). The Gradient Shift is complementary to the scale, shifting the scaled color gradient into the desired region by adding a constant factor between 0 and 1. Current Overlays with Color Gradient: Area Gradient Voronoi Area Difference Division Orientation Ellipse Elongation Ratio Ellipse Fit With respect to ROI Edge Intensity","title":"Adjusting a gradient color overlay"},{"location":"Icy_Plugins/01_CellOverlay/#export-an-overlay","text":"While in the later section CellExport we show how to export many data points at once, every overlay has a custom export option. This option can be reached from the layer option menu, where you can also adapt the opacity or delete the overlay. Here we show howt exprot the area of cells from the CELL_AREA overlay: Click on the layer name to make the export option appear Click on the export button and choose where to save the spreadsheet Every sheet in the file will contain the area of the cells in the respective frame","title":"Export an overlay"},{"location":"Icy_Plugins/01_CellOverlay/#available-overlays","text":"Currently the following overlays are available, divided by category:","title":"Available Overlays"},{"location":"Icy_Plugins/01_CellOverlay/#basic","text":"CELL_OUTLINE CELL_AREA CELL_SEGMENTATION_BORDER Draws cell centroids and cell outlines in a color of choice Colors the cells according to their area size in a gradient fashion. Gradient threshold can be dynamically changed, just move the pointer to back to the image to refresh Shows where the border of the segmentation was identified tutorial video","title":"Basic"},{"location":"Icy_Plugins/01_CellOverlay/#tesselation","text":"CELL_VORONOI_DIAGRAM CELL_POLYGON_CLASS CELL_GRAPH_VIEW displays the voronoi diagram computed from the cell centroids Displays the number of neighbors each cell has with color code or number Shows the connectivity (neighbors) of each cell tutorial video","title":"Tesselation"},{"location":"Icy_Plugins/01_CellOverlay/#dynamic-tracking-required","text":"TRACKING_REVIEW TRACKING_DISPLACEMENT DIVISIONS_AND_ELIMINATIONS Reviews the tracking in case it has been eliminated or to highlight different aspects Shows how much a centroid moved from one frame to the next. Helpful to spot mistakes Highlights the cells that underwent division or elimination during the time lapse tutorial video ---- tutorial video","title":"Dynamic (tracking required)"},{"location":"Icy_Plugins/01_CellOverlay/#interactive","text":"CELL_COLOR_TAG EDGE_COLOR_TAG Interactively mark cells with several colors of choice and follow the cells over-time Interactively mark edges with several colors of choice and follow the edges over-time tutorial video tutorial video","title":"Interactive"},{"location":"Icy_Plugins/01_CellOverlay/#edge-junction-analysis","text":"EDGE_T1_TRANSITIONS EDGE_STABILITY EDGE_INTENSITY Computes and displays the T1 transitions present in the time lapse Displays a color code for how stable edges are, how long they can be tracked Transforms the edge geometries into ROIs and displays the underlying intensity of the image","title":"Edge / Junction Analysis"},{"location":"Icy_Plugins/01_CellOverlay/#shape-analysis","text":"ELLIPSE_FIT ELLIPSE_ELONGATION_RATIO ELLIPSE_FIT_WRT_POINT_ROI Fits an ellipse to each cell geometry and displays the longest axis Color codes the cell according to their elongation ratio and writes the elongation factor within every cell Highlights the orienation of the cell with respect to a user defined ROI (green point). The ROI can be interactively moved tutorial video","title":"Shape analysis"},{"location":"Icy_Plugins/01_CellOverlay/#futher-overlays","text":"DIVSION_ORIENTATION: Color codes the dividing cells according to their new junction orientation (Longest axis of mother cell vs New junction) TRACKING_STABLE_ONLY: Outlines the cells that are completely tracked throughout the movie or till the division TRACKING_CORRECTION_HINTS: Help identifying cells which have been segmented wrongly, best used in combination with CellEditor plugin EDGE_ORIENTATION: useful to extract orientation of individual edges with combined intensity measurement CELL_PROJECTION: see CellSurface section Learn how to load your own graph structure into memory in the next section","title":"Futher overlays"},{"location":"Icy_Plugins/01_CellOverlay/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Icy_Plugins/01_CellOverlay/#this-page-was-written-by-davide-heller-on-121120151537","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 12.11.2015@15:37"},{"location":"Icy_Plugins/02_CellGraph/","text":"Creating new Graphs with CellGraph While the CellOverlay plugin generates the Overlays, it requires a graph structure in the shared plugin memory (also called swimming pool in icy). Learn here how to transform your skeleton images into a graph structure using the CellGraph plugin. For a general introduction to the CellGraph concept watch our first tutorial video . Another video dedicated to how to import skeleton time series is available here too. Warning: - Currently only one graph at the time is allowed in memory. - Currently only the following file pattern for time series is allowed: [name]_000.[ext] - Currently one skeleton file per frame is required, i.e. a multiple image tiff is not supported To create a graph and load it into memory open the CellGraph plugin from the toolbar: 1. Choose your Input files Most importantly CellGraph needs files from which to extract the graph structure: If your files are images/bitmaps the default File type 'SKELETON' is correct Alternative files are WKT & VKT, both text based Choose your input file If you want to load a time series select the First time point Please notice the file name convention mentioned in the warning above Set the number of Time points to load , to start it is recommended to try with 1 or 2 2. Review the secondary input options [optional] In order to correctly analyze the input files CellGraph can be fine tuned for specific file types. By default CellGraph assumes to receive files which were directly exported from the EpiTools App for Matlab. Click the Packing Analyzer files if you used the software Packing Analyzer v.2-8 by (Aigouy et al. (2010)) for segmentation In this scenario use the image as first file. Cell_Graph will use the /handCorrection.png as skeleton Choose Cut on border line to exclude the most outer cell layer from the analysis This is advisable in case of poor performance at the segmentation boundaries Choose Remove very small cells to exclude cells below an area threshold automatically e.g. avoid small segmentation artefacts to be recognized as cells 3. Choose if to track your skeletons Tracking is only possible if a time series is given as inptut The standard tracking Algorithm is currently STABLE_MARRIAGE Try the HUNGARIAN type for a more robust algorithm to movement (time consuming!) 4. Review tracking options [optional] Depending on the time series frequency and the segmentation quality it can be helpful to change the default paramenters of the tracking algorithm: Change the Propagation limit to amplify(+)/reduce(-) the number of previous frames that participate in the assignment of the track of a cell. This is useful when the sample is subject to strong motion, a shorter limit will prove more effective Change the Cut N border lines in 1st frame to track only a core region of the sample This is useful if the border region segmentation is poor. The algoritm will exclude N border layers from the cell population in the first frame and track only the remaining inner cells. 5. Choose the Destination The extracted graph structures are always used together with a background image. This image can be any image compatible (x, y,t) with the skeleton images, i.e. the original raw image / projected_image / second channel ecc Choose Image to overay from you active Sequences The plugin requires an open image! Deselect Use ICY-SwimmingPool only to avoid overriding another structure in memory This is due to a current limitation which allows only one graph in memory at a time Select Remove Previous Overlays if the destination image already overlays which are not needed anymore 6. Run the plugin To generate the graph click on the triangle button on the lower-left of the plugin. During the Excecution the progress can be followed both in the status bar as well as in Output tab. After excecution the first overlay will be displayed on the active sequence. Generated Result In case of a Single frame the found cell polygons with the centroids will be visualized (i.e. the CELL OUTLINE overlay) In case of a Tracked time series cell the automatically generated overlay will be the TRACKING one. Every cell is outlined by an individual color preserved through time and a filled with one of the following colors in case of a trackign event: [red] cell missing in previous frame [yellow] cell missing in next frame [green] cell missing in previous&next [blue] cell dividing in next frame [magenta] brother cell missing [cyan] cell eliminated in next frame [gray] brother cell was eliminated Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 29.04.2015@14:36 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Creating new Graphs with CellGraph"},{"location":"Icy_Plugins/02_CellGraph/#creating-new-graphs-with-cellgraph","text":"While the CellOverlay plugin generates the Overlays, it requires a graph structure in the shared plugin memory (also called swimming pool in icy). Learn here how to transform your skeleton images into a graph structure using the CellGraph plugin. For a general introduction to the CellGraph concept watch our first tutorial video . Another video dedicated to how to import skeleton time series is available here too. Warning: - Currently only one graph at the time is allowed in memory. - Currently only the following file pattern for time series is allowed: [name]_000.[ext] - Currently one skeleton file per frame is required, i.e. a multiple image tiff is not supported To create a graph and load it into memory open the CellGraph plugin from the toolbar:","title":"Creating new Graphs with CellGraph"},{"location":"Icy_Plugins/02_CellGraph/#1-choose-your-input-files","text":"Most importantly CellGraph needs files from which to extract the graph structure: If your files are images/bitmaps the default File type 'SKELETON' is correct Alternative files are WKT & VKT, both text based Choose your input file If you want to load a time series select the First time point Please notice the file name convention mentioned in the warning above Set the number of Time points to load , to start it is recommended to try with 1 or 2","title":"1. Choose your Input files"},{"location":"Icy_Plugins/02_CellGraph/#2-review-the-secondary-input-options-optional","text":"In order to correctly analyze the input files CellGraph can be fine tuned for specific file types. By default CellGraph assumes to receive files which were directly exported from the EpiTools App for Matlab. Click the Packing Analyzer files if you used the software Packing Analyzer v.2-8 by (Aigouy et al. (2010)) for segmentation In this scenario use the image as first file. Cell_Graph will use the /handCorrection.png as skeleton Choose Cut on border line to exclude the most outer cell layer from the analysis This is advisable in case of poor performance at the segmentation boundaries Choose Remove very small cells to exclude cells below an area threshold automatically e.g. avoid small segmentation artefacts to be recognized as cells","title":"2. Review the secondary input options [optional]"},{"location":"Icy_Plugins/02_CellGraph/#3-choose-if-to-track-your-skeletons","text":"Tracking is only possible if a time series is given as inptut The standard tracking Algorithm is currently STABLE_MARRIAGE Try the HUNGARIAN type for a more robust algorithm to movement (time consuming!)","title":"3. Choose if to track your skeletons"},{"location":"Icy_Plugins/02_CellGraph/#4-review-tracking-options-optional","text":"Depending on the time series frequency and the segmentation quality it can be helpful to change the default paramenters of the tracking algorithm: Change the Propagation limit to amplify(+)/reduce(-) the number of previous frames that participate in the assignment of the track of a cell. This is useful when the sample is subject to strong motion, a shorter limit will prove more effective Change the Cut N border lines in 1st frame to track only a core region of the sample This is useful if the border region segmentation is poor. The algoritm will exclude N border layers from the cell population in the first frame and track only the remaining inner cells.","title":"4. Review tracking options [optional]"},{"location":"Icy_Plugins/02_CellGraph/#5-choose-the-destination","text":"The extracted graph structures are always used together with a background image. This image can be any image compatible (x, y,t) with the skeleton images, i.e. the original raw image / projected_image / second channel ecc Choose Image to overay from you active Sequences The plugin requires an open image! Deselect Use ICY-SwimmingPool only to avoid overriding another structure in memory This is due to a current limitation which allows only one graph in memory at a time Select Remove Previous Overlays if the destination image already overlays which are not needed anymore","title":"5. Choose the Destination"},{"location":"Icy_Plugins/02_CellGraph/#6-run-the-plugin","text":"To generate the graph click on the triangle button on the lower-left of the plugin. During the Excecution the progress can be followed both in the status bar as well as in Output tab. After excecution the first overlay will be displayed on the active sequence.","title":"6. Run the plugin"},{"location":"Icy_Plugins/02_CellGraph/#generated-result","text":"In case of a Single frame the found cell polygons with the centroids will be visualized (i.e. the CELL OUTLINE overlay) In case of a Tracked time series cell the automatically generated overlay will be the TRACKING one. Every cell is outlined by an individual color preserved through time and a filled with one of the following colors in case of a trackign event: [red] cell missing in previous frame [yellow] cell missing in next frame [green] cell missing in previous&next [blue] cell dividing in next frame [magenta] brother cell missing [cyan] cell eliminated in next frame [gray] brother cell was eliminated","title":"Generated Result"},{"location":"Icy_Plugins/02_CellGraph/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Icy_Plugins/02_CellGraph/#this-page-was-written-by-davide-heller-on-290420151436","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 29.04.2015@14:36"},{"location":"Icy_Plugins/03_CellExport/","text":"Exporting data with CellExport After generating a graph with CellGraph and inspecting it with CellOverlay , a remaining step is how to export quantitative information. The CellExport plugin can read a loaded graph structure and export the data contained in various formats. Currently the export is tied to an image sequence on which the graph is projected to have all the information necessary for a successful export. Check out our video tutorial for spreadsheet export for a short overview. Export formats Excel Spreadsheet (*.xls) The spreadsheet option couples most of the individual overlay exports into a single xls file. Each frame produces a separate sheet and contains the most important analysis features over every cell including: Cell tracking id Cell centroid (x,y) coordinate Cell area Polygon count / number of neighbors Voronoi area based on the voronoi tesselation generated from the cell's centroids Ellise fitting parameters Major axis's length Minor axis's length Major axis's angle (i.e. cell orientation) [TRUE/FALSE] value whether the cell has divided throughout the timelapse Frame number in which the cell divided (if) [TRUE/FALSE] value whether the cell was eliminated during the timelapse Frame number in which the cell was eliminated [TRUE/FALSE] value whether the cell is on the boundary of the segmentation The Only Tagged cells option enables to export only the cells marked through the CELL COLOR TAG overlay. In this case every line will be preceeded by an additional column indicating the color tag. GraphML (*.xml) The limitation of spreadsheets is the difficulty to incorporate the graph structure of the tissue. For this reason we offer another export format called graphML. This XML based format saves the structure of the graph and can be extended through vertex attributes. To read more about the GraphML format we refer the reader to the following GraphML website As attribute values we included similar features to the spreadsheet option: id,x,area,boundary,division,elimination, division_time, elimination time The export will generate an individual graphml file for every frame (e.g. frame000.xml for frame0). Additionally to the separate graphML files, a header file is added to keep reference of the included attributes. Please make sure to select a new folder when choosing the destination location. A small example for analyzing the files using the statistical computing language R can be found here . Watch our GraphML video tutorial for more information. Vector graphic (*.pdf) A still experimental feature is to generate vector graphics from the overlay. This plugin option generates a pdf file containing the overlays represented on the currently selected time point. This has proven to be useful especially for figure composition. Skeleton files (*.tiff or *.wkt) Selecting TIFF_SKELETONS exports the currently detected cells as TIFF images regardless of the input format given to CellGraph. This can be convenient in case you want to further edit your skeletons (e.g. the PNG skeletons returned by the EpiTools for Matlab) with CellEditor Selecting WKT_SKELETONS exports the currently detected cells as Well-Known text files which describe the individual polygons composing the images. These files cannot be further edited by Pixel based methods but allow a much faster import through CellGraph as well in other Geospatial softwares/libraries. Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 22.04.2016@17:45 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Exporting data with CellExport"},{"location":"Icy_Plugins/03_CellExport/#exporting-data-with-cellexport","text":"After generating a graph with CellGraph and inspecting it with CellOverlay , a remaining step is how to export quantitative information. The CellExport plugin can read a loaded graph structure and export the data contained in various formats. Currently the export is tied to an image sequence on which the graph is projected to have all the information necessary for a successful export. Check out our video tutorial for spreadsheet export for a short overview.","title":"Exporting data with CellExport"},{"location":"Icy_Plugins/03_CellExport/#export-formats","text":"","title":"Export formats"},{"location":"Icy_Plugins/03_CellExport/#excel-spreadsheet-xls","text":"The spreadsheet option couples most of the individual overlay exports into a single xls file. Each frame produces a separate sheet and contains the most important analysis features over every cell including: Cell tracking id Cell centroid (x,y) coordinate Cell area Polygon count / number of neighbors Voronoi area based on the voronoi tesselation generated from the cell's centroids Ellise fitting parameters Major axis's length Minor axis's length Major axis's angle (i.e. cell orientation) [TRUE/FALSE] value whether the cell has divided throughout the timelapse Frame number in which the cell divided (if) [TRUE/FALSE] value whether the cell was eliminated during the timelapse Frame number in which the cell was eliminated [TRUE/FALSE] value whether the cell is on the boundary of the segmentation The Only Tagged cells option enables to export only the cells marked through the CELL COLOR TAG overlay. In this case every line will be preceeded by an additional column indicating the color tag.","title":"Excel Spreadsheet (*.xls)"},{"location":"Icy_Plugins/03_CellExport/#graphml-xml","text":"The limitation of spreadsheets is the difficulty to incorporate the graph structure of the tissue. For this reason we offer another export format called graphML. This XML based format saves the structure of the graph and can be extended through vertex attributes. To read more about the GraphML format we refer the reader to the following GraphML website As attribute values we included similar features to the spreadsheet option: id,x,area,boundary,division,elimination, division_time, elimination time The export will generate an individual graphml file for every frame (e.g. frame000.xml for frame0). Additionally to the separate graphML files, a header file is added to keep reference of the included attributes. Please make sure to select a new folder when choosing the destination location. A small example for analyzing the files using the statistical computing language R can be found here . Watch our GraphML video tutorial for more information.","title":"GraphML (*.xml)"},{"location":"Icy_Plugins/03_CellExport/#vector-graphic-pdf","text":"A still experimental feature is to generate vector graphics from the overlay. This plugin option generates a pdf file containing the overlays represented on the currently selected time point. This has proven to be useful especially for figure composition.","title":"Vector graphic (*.pdf)"},{"location":"Icy_Plugins/03_CellExport/#skeleton-files-tiff-or-wkt","text":"Selecting TIFF_SKELETONS exports the currently detected cells as TIFF images regardless of the input format given to CellGraph. This can be convenient in case you want to further edit your skeletons (e.g. the PNG skeletons returned by the EpiTools for Matlab) with CellEditor Selecting WKT_SKELETONS exports the currently detected cells as Well-Known text files which describe the individual polygons composing the images. These files cannot be further edited by Pixel based methods but allow a much faster import through CellGraph as well in other Geospatial softwares/libraries.","title":"Skeleton files (*.tiff or *.wkt)"},{"location":"Icy_Plugins/03_CellExport/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Icy_Plugins/03_CellExport/#this-page-was-written-by-davide-heller-on-220420161745","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 22.04.2016@17:45"},{"location":"Icy_Plugins/04_CellEditor/","text":"Modifying Skeleton Images with CellEditor CellEditor allows to manually correct skeleton images by simple painting tools. Please make sure to backup your skeletons before modifying them permanently! The layer option menu shown in the tutorial has been added in version 0.8.9 The following tutorial shows how to modify the test set included in EpiTools. 1. Load the test set Load the test set included in the zip file of the EpiTools plugins for icy by clicking on the relative icon or (in case the workspace was not installed) by searching TestLoader. 2. Export TIFF skeletons To edit the skeletons we need to obtain TIFF images. Any loaded skeleton set can be saved as TIFF sequence through the CellExport plugin, choosing the option TIFF_SKELETONS. 3. Import TIFF skeletons Drag the images inside icy to open the exported TIFF images as sequence. 4. Setup CellEditor The CellEditor plugin needs to sequence: (1) the INPUT sequence on which to draw and (2) the OUTPUT sequence on which to apply the modifications. After setting the options accordingly start the plugin. 5. Deactivate Legend This step is optional but in case a legend is blocking the sequence visualization it can be deactivated in the relative overlay. For this select the INPUT sequence move to the Layer menu and select the Cell Tracking Color Overlay. Now deactivate the Show Legend checkbox to suppress the visualization. 6. Access modification overlay By having started the CellEditor Plugin, a new overlay was added to the INPUT sequence. By selecting the latter you should see the relative option menu. 7. Add a cell junction Cell junctions can be added by painting with the white color on the INPUT sequence. Upon clicking apply or pressing the ENTER key, the modifications will be transferred to the OUTPUT sequence. 8. Remove junctions To remove junctions the painting mode (WHITE or BLACK color) has to be switched to black. When applying the black paint through ENTER or button, the skeleton will be cut in those parts. Note that it is sufficient to create a small gap in the skeleton to suppress the cell detection. (optional) Use the correction overlay To spot segmentation mistakes we offer the TRACKING_CORRECTION_HINTS overlay in the CellOverlay plugin. The overlay uses the tracking information to highlight cells that are absent from previous frames. Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 22.04.2016@20:00 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Modifying Skeleton Images with CellEditor"},{"location":"Icy_Plugins/04_CellEditor/#modifying-skeleton-images-with-celleditor","text":"CellEditor allows to manually correct skeleton images by simple painting tools. Please make sure to backup your skeletons before modifying them permanently! The layer option menu shown in the tutorial has been added in version 0.8.9 The following tutorial shows how to modify the test set included in EpiTools.","title":"Modifying Skeleton Images with CellEditor"},{"location":"Icy_Plugins/04_CellEditor/#1-load-the-test-set","text":"Load the test set included in the zip file of the EpiTools plugins for icy by clicking on the relative icon or (in case the workspace was not installed) by searching TestLoader.","title":"1. Load the test set"},{"location":"Icy_Plugins/04_CellEditor/#2-export-tiff-skeletons","text":"To edit the skeletons we need to obtain TIFF images. Any loaded skeleton set can be saved as TIFF sequence through the CellExport plugin, choosing the option TIFF_SKELETONS.","title":"2. Export TIFF skeletons"},{"location":"Icy_Plugins/04_CellEditor/#3-import-tiff-skeletons","text":"Drag the images inside icy to open the exported TIFF images as sequence.","title":"3. Import TIFF skeletons"},{"location":"Icy_Plugins/04_CellEditor/#4-setup-celleditor","text":"The CellEditor plugin needs to sequence: (1) the INPUT sequence on which to draw and (2) the OUTPUT sequence on which to apply the modifications. After setting the options accordingly start the plugin.","title":"4. Setup CellEditor"},{"location":"Icy_Plugins/04_CellEditor/#5-deactivate-legend","text":"This step is optional but in case a legend is blocking the sequence visualization it can be deactivated in the relative overlay. For this select the INPUT sequence move to the Layer menu and select the Cell Tracking Color Overlay. Now deactivate the Show Legend checkbox to suppress the visualization.","title":"5. Deactivate Legend"},{"location":"Icy_Plugins/04_CellEditor/#6-access-modification-overlay","text":"By having started the CellEditor Plugin, a new overlay was added to the INPUT sequence. By selecting the latter you should see the relative option menu.","title":"6. Access modification overlay"},{"location":"Icy_Plugins/04_CellEditor/#7-add-a-cell-junction","text":"Cell junctions can be added by painting with the white color on the INPUT sequence. Upon clicking apply or pressing the ENTER key, the modifications will be transferred to the OUTPUT sequence.","title":"7. Add a cell junction"},{"location":"Icy_Plugins/04_CellEditor/#8-remove-junctions","text":"To remove junctions the painting mode (WHITE or BLACK color) has to be switched to black. When applying the black paint through ENTER or button, the skeleton will be cut in those parts. Note that it is sufficient to create a small gap in the skeleton to suppress the cell detection.","title":"8. Remove junctions"},{"location":"Icy_Plugins/04_CellEditor/#optional-use-the-correction-overlay","text":"To spot segmentation mistakes we offer the TRACKING_CORRECTION_HINTS overlay in the CellOverlay plugin. The overlay uses the tracking information to highlight cells that are absent from previous frames.","title":"(optional) Use the correction overlay"},{"location":"Icy_Plugins/04_CellEditor/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Icy_Plugins/04_CellEditor/#this-page-was-written-by-davide-heller-on-220420162000","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 22.04.2016@20:00"},{"location":"Icy_Plugins/05_CellSurface/","text":"Visualizing GridFit\u00a9 Surfaces with CellSurface and CellProjection Assumption The selective plane projection module from the EpiTools app for Matlab was used (version > 2.1.5). The latter automatically saves ASCII files containing the 2nd estimated surface by GridFit\u00a9 [1]. The surface/height map files can be found in the Analysis/ folder under vtk/gridfit_frame_###.vtk . Every line in these files represents a coordinate in the surface grid (i.e. x,y,z). Starting from EpiTools plugins for icy version 0.8.7 we provide two tools to use these files, one to visualize the surface as 3D rendering (CellSurface) and the other to evaluate the position of cells in 3D (CellProjection overlay). We provide example files here to generate the visualizations below. CellSurface Requisites: icy plugin 3D Mesh ROI plugin [2] The CellSurface plugin visualizes the height map as 3D rendering, leveraging on the 3D Mesh ROI plugin [2] and the VTK library [3] integrated in icy. Time series are supported by assigning individual ROIs to specific frames, allowing the user to inspect the morphological changes of the surface over time. To load our example: Open frame_000.tif and the CellSurface plugin Set gridfit_frame_000.vtk as input vtk file Verify the pixel size in the Sequence Properties (Icy Side Bar) to scale the surface correctly, for the example it should be (x = y = 0.102um) and (z = 0.219um) see (A.) Select 3DVTK mode in the sequence viewer (2nd menu from the left) (B.) Try the decimate option for better performance and less memory use in case of time series (C.) Run the plugin (triangle) The Surface can be saved as ROI XML file in the ROI menu (D.) For more information about the decimation method visit the dedicated vtk documentation page [WARNING] Currently we do not support registered data as the translation is applied after surface export [WARNING] If used on a z-stack, leaving the 3DVTK starts cpu intesive computation by 3D mesh roi plugin to adapt the ROI in 2D, to avoid this we suggest removing the ROI beforehand. CellProjection The CellProjection overlay for the CellOverlay plugin visualizes as color gradient the magnitude of the z-component from the surface normal of every cell. The overlay uses the estimated height map to assign z-coordinates to all coordinates of the cell\u2019s polygon. To compute the apporximated 3D surface normal for every cells we use Newell\u2019s method [4]. The z-component of the surface normal is useful to estimate the area projection bias through the proportional dependence between 3D and projected 2D area [5]. All values can be exported in an excel sheet through the layer options menu in icy. To load our example: Open frame_000.tif and the CellGraph plugin Choose FileType WKT and set skeleton_000.wkt as first time point. Run the plugin and a red outline should appear on the sequence (see figure 1) Open CellOverlay plugin and select CELL_PROJECTION as Overlay Set gridfit_frame_000.vtk as first surface file (A.) Verify the pixel size in the Sequence Properties (Icy Side Bar) to scale the surface correctly, for the example it should be (x = y = 0.102um) and (z = 0.219um) (B.) Run the plugin (i.e. add the overlay on the sequence) Export an XLS sheet with the information for every cell in the Layer Option menu (C.) An example output excel sheet can be found in the example dataset. Example files The example surface data set contains the following files File Description frame_000.tif Projected image of wing disc sample with pixel size (x = y = 0.102um) and (z = 0.219um) skeleton_000.wkt Segmentation line saved with CellExporter for faster loading border_000.wkt Segmentation border saved with CellExporter for faster loading gridfit_frame_000.vtk Surface file for frame_000.tif containing the coordinates of the 2nd gridFit estimation in ASCII format (1 grid point per line: x,y,z) cell_projection_overlay.xls Example excel output sheet containing the compents of the unit surface normal for every cell in teh skeleton References Surface Fitting using gridfit by John D\u2019Errico Plugin by Alexandre Dufour, available at: http://icy.bioimageanalysis.org/plugin/3D_Mesh_ROI , to install it simply use the icy search bar http://www.vtk.org Sutherland, Evan E., Robert F. Sproull, and Robert a. Schumacker. 1974. \u201cA Characterization of Ten Hidden-Surface Algorithms.\u201d ACM Computing Surveys 6 (1): 1\u201355. doi:10.1145/356625.356626 John M. Snyder and Alan H. Barr. 1987. Ray tracing complex models containing surface tessellations. ACM Computer Graphics 21 (4): 119-128. doi:10.1145/37401.37417 Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 10.11.2015@20:00 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Visualizing GridFit\u00a9 Surfaces with CellSurface and CellProjection"},{"location":"Icy_Plugins/05_CellSurface/#visualizing-gridfit-surfaces-with-cellsurface-and-cellprojection","text":"","title":"Visualizing GridFit\u00a9 Surfaces with CellSurface and CellProjection"},{"location":"Icy_Plugins/05_CellSurface/#assumption","text":"The selective plane projection module from the EpiTools app for Matlab was used (version > 2.1.5). The latter automatically saves ASCII files containing the 2nd estimated surface by GridFit\u00a9 [1]. The surface/height map files can be found in the Analysis/ folder under vtk/gridfit_frame_###.vtk . Every line in these files represents a coordinate in the surface grid (i.e. x,y,z). Starting from EpiTools plugins for icy version 0.8.7 we provide two tools to use these files, one to visualize the surface as 3D rendering (CellSurface) and the other to evaluate the position of cells in 3D (CellProjection overlay). We provide example files here to generate the visualizations below.","title":"Assumption"},{"location":"Icy_Plugins/05_CellSurface/#cellsurface","text":"Requisites: icy plugin 3D Mesh ROI plugin [2] The CellSurface plugin visualizes the height map as 3D rendering, leveraging on the 3D Mesh ROI plugin [2] and the VTK library [3] integrated in icy. Time series are supported by assigning individual ROIs to specific frames, allowing the user to inspect the morphological changes of the surface over time. To load our example: Open frame_000.tif and the CellSurface plugin Set gridfit_frame_000.vtk as input vtk file Verify the pixel size in the Sequence Properties (Icy Side Bar) to scale the surface correctly, for the example it should be (x = y = 0.102um) and (z = 0.219um) see (A.) Select 3DVTK mode in the sequence viewer (2nd menu from the left) (B.) Try the decimate option for better performance and less memory use in case of time series (C.) Run the plugin (triangle) The Surface can be saved as ROI XML file in the ROI menu (D.) For more information about the decimation method visit the dedicated vtk documentation page [WARNING] Currently we do not support registered data as the translation is applied after surface export [WARNING] If used on a z-stack, leaving the 3DVTK starts cpu intesive computation by 3D mesh roi plugin to adapt the ROI in 2D, to avoid this we suggest removing the ROI beforehand.","title":"CellSurface"},{"location":"Icy_Plugins/05_CellSurface/#cellprojection","text":"The CellProjection overlay for the CellOverlay plugin visualizes as color gradient the magnitude of the z-component from the surface normal of every cell. The overlay uses the estimated height map to assign z-coordinates to all coordinates of the cell\u2019s polygon. To compute the apporximated 3D surface normal for every cells we use Newell\u2019s method [4]. The z-component of the surface normal is useful to estimate the area projection bias through the proportional dependence between 3D and projected 2D area [5]. All values can be exported in an excel sheet through the layer options menu in icy. To load our example: Open frame_000.tif and the CellGraph plugin Choose FileType WKT and set skeleton_000.wkt as first time point. Run the plugin and a red outline should appear on the sequence (see figure 1) Open CellOverlay plugin and select CELL_PROJECTION as Overlay Set gridfit_frame_000.vtk as first surface file (A.) Verify the pixel size in the Sequence Properties (Icy Side Bar) to scale the surface correctly, for the example it should be (x = y = 0.102um) and (z = 0.219um) (B.) Run the plugin (i.e. add the overlay on the sequence) Export an XLS sheet with the information for every cell in the Layer Option menu (C.) An example output excel sheet can be found in the example dataset.","title":"CellProjection"},{"location":"Icy_Plugins/05_CellSurface/#example-files","text":"The example surface data set contains the following files File Description frame_000.tif Projected image of wing disc sample with pixel size (x = y = 0.102um) and (z = 0.219um) skeleton_000.wkt Segmentation line saved with CellExporter for faster loading border_000.wkt Segmentation border saved with CellExporter for faster loading gridfit_frame_000.vtk Surface file for frame_000.tif containing the coordinates of the 2nd gridFit estimation in ASCII format (1 grid point per line: x,y,z) cell_projection_overlay.xls Example excel output sheet containing the compents of the unit surface normal for every cell in teh skeleton","title":"Example files"},{"location":"Icy_Plugins/05_CellSurface/#references","text":"Surface Fitting using gridfit by John D\u2019Errico Plugin by Alexandre Dufour, available at: http://icy.bioimageanalysis.org/plugin/3D_Mesh_ROI , to install it simply use the icy search bar http://www.vtk.org Sutherland, Evan E., Robert F. Sproull, and Robert a. Schumacker. 1974. \u201cA Characterization of Ten Hidden-Surface Algorithms.\u201d ACM Computing Surveys 6 (1): 1\u201355. doi:10.1145/356625.356626 John M. Snyder and Alan H. Barr. 1987. Ray tracing complex models containing surface tessellations. ACM Computer Graphics 21 (4): 119-128. doi:10.1145/37401.37417","title":"References"},{"location":"Icy_Plugins/05_CellSurface/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Icy_Plugins/05_CellSurface/#this-page-was-written-by-davide-heller-on-101120152000","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 10.11.2015@20:00"},{"location":"Icy_Plugins/06_CellClone/","text":"Detecting Cell Clones Summary The CELL_CLONE overlay (added in v0.9.1) in the CellOverlay plugin detects the outlines of cell subpopulations (clones) based on a secondary input channel. The detection works as follows: For every cell geometry, the mean intensity is measured within the cell geometry from the selected channel (the image can have multiple channels but the detection will only consider one currently). Given a user defined threshold (by default 100, currently limited to 0-255 <-> 8 bit image), the cells above the threshold are selected and create a subset from the cell network. By using a network property called \"connected components\" all the connected subgroups (clones) are identified and visualized.The threshold can be dynamically adjusted with the slider, the channel is fixed once the overlay is created. Export The excel export accessible through the layer option menu (see example below) currently includes: clone_id (increasing integer) centroid coordinates of the clone geometry size/area (in pixel) perimeter (in pixel) cell count (# of cells within clone) border count (# of cells on the border of the clone) neighbor count (# of cells on the other side of the border, i.e. neighboring the clone) detection channel (in case the channel in the image has a name) the used detection_threshold. Example workflow download the cellClone_example.zip from the epitools_samples repository open MontageCh1.tif in icy and overlay the skeleton with the CellGraph plugin by specifying the MontageSkeleton.tif as input file Add the CELL_CLONES overlay from the CellOverlay plugin From the layer menu choose the \"Cell Clones\" layer and select the export button from the menu at the bottom to save the excel file (an equivalent example excel file is included in the archive) (Optional) switch off the red polygon_layer by clicking the eye symbol next to the \"Polygons\" layer (Optional) adjust the detection_threshold dynamically by moving the slider above the export button Source Code The JAVA code for this overlay can be found here: CellGraph/src/plugins/davhelle/cellgraph/overlays/CellCloneOverlay.java Acknowledgements Thanks to the Fisun lab @ EPFL for the idea of developing this overlay, the example data and helping testing it! Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 26.7.2017@16:24 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Detecting Cell Clones"},{"location":"Icy_Plugins/06_CellClone/#detecting-cell-clones","text":"","title":"Detecting Cell Clones"},{"location":"Icy_Plugins/06_CellClone/#summary","text":"The CELL_CLONE overlay (added in v0.9.1) in the CellOverlay plugin detects the outlines of cell subpopulations (clones) based on a secondary input channel. The detection works as follows: For every cell geometry, the mean intensity is measured within the cell geometry from the selected channel (the image can have multiple channels but the detection will only consider one currently). Given a user defined threshold (by default 100, currently limited to 0-255 <-> 8 bit image), the cells above the threshold are selected and create a subset from the cell network. By using a network property called \"connected components\" all the connected subgroups (clones) are identified and visualized.The threshold can be dynamically adjusted with the slider, the channel is fixed once the overlay is created.","title":"Summary"},{"location":"Icy_Plugins/06_CellClone/#export","text":"The excel export accessible through the layer option menu (see example below) currently includes: clone_id (increasing integer) centroid coordinates of the clone geometry size/area (in pixel) perimeter (in pixel) cell count (# of cells within clone) border count (# of cells on the border of the clone) neighbor count (# of cells on the other side of the border, i.e. neighboring the clone) detection channel (in case the channel in the image has a name) the used detection_threshold.","title":"Export"},{"location":"Icy_Plugins/06_CellClone/#example-workflow","text":"download the cellClone_example.zip from the epitools_samples repository open MontageCh1.tif in icy and overlay the skeleton with the CellGraph plugin by specifying the MontageSkeleton.tif as input file Add the CELL_CLONES overlay from the CellOverlay plugin From the layer menu choose the \"Cell Clones\" layer and select the export button from the menu at the bottom to save the excel file (an equivalent example excel file is included in the archive) (Optional) switch off the red polygon_layer by clicking the eye symbol next to the \"Polygons\" layer (Optional) adjust the detection_threshold dynamically by moving the slider above the export button","title":"Example workflow"},{"location":"Icy_Plugins/06_CellClone/#source-code","text":"The JAVA code for this overlay can be found here: CellGraph/src/plugins/davhelle/cellgraph/overlays/CellCloneOverlay.java","title":"Source Code"},{"location":"Icy_Plugins/06_CellClone/#acknowledgements","text":"Thanks to the Fisun lab @ EPFL for the idea of developing this overlay, the example data and helping testing it!","title":"Acknowledgements"},{"location":"Icy_Plugins/06_CellClone/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Icy_Plugins/06_CellClone/#this-page-was-written-by-davide-heller-on-26720171624","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 26.7.2017@16:24"},{"location":"Quick_Guide/00_Installation/","text":"Installation EpiTools comes in a single flavour as software package for Matlab. We suggest to use the lastest Matlab version available (2014a) since we developed and tested for retrocompatibility only for a small number of old Matlab releases. At this time of the developing plan, you will still need a full and licenced installation on Matlab since our program is just a wrapped ensamble of matlab and c++ functions working together. How to install it and receive our latest patches or updates Installing EpiTools from our website From the home page of EpiTools you can easily download the latest available version of EpiTools. This comes as a package where you will find only the needed files (no deprecated functions, crap files none wants on his machine). This is the most polished and clean version of EpiTools. Download the package from here Explode the package From the directory generated by exploding the package, double click on the launcher file correspondent to your operative system. Done! In case the launcher complains as follows: EpiTools_mac: Permission denied follow these instructions from a new console windows (in OsX, open a new Terminal session). cd directory-where-you-downloaded-and-exploded-epitools chmod +x EpiTools_mac Q: updates? A: We are working on a nice and neat implementation of auto updates. Unfortunately we are not ready yet to provide them automatically from EpiTools framework. However, the package you find here on our website will be always the latest version of our software! Q: Command line access? A: To ensure the best GUI flexibility with Epitools for matlab V2 we had to disable the command line access for now. You can still download EpiTools for matlab V1 with command line support from here . A simple tutorial script called EpiTools_CommandLine.m is provided as example in the main archive folder. Installing EpiTools from the git repository Once you granted access to our repository, installing EpiTools is a piece of cake. You just have to clone our repository from our online versioning system (Bitbucket, a manager for GIT and MERCURIAL repositories). If you do not know what GIT is here you will find nice tutorials . Git comes automatically if you are using any version of SourceTree or any other gui software of your choice (here a selection) . You can do it in two different ways according to how do you feel about using the terminal or GUI applications. In SourceTree Clone our git repository (click on Actions>Clone>Clone in SourceTree) Select the release branch (master) and an appropriate empty folder i.e. /Users/your-username/epitools Open Matlab. In Matlab, navigate to the directory where you clone the repository and point to ./src/ Right click on EpiTools.m and select Run. Wait until the EpiTools interface will appear. In Terminal Point an empty directory Execute the following command git clone https://github.com/epitools/epitools-matlab.git Open Matlab. In Matlab, navigate to the directory where you clone the repository and point to ./src/ Right click on EpiTools.m and select Run. Wait until the EpiTools interface will appear. Updating EpiTools If you cloned our repository you must have a git client version installed locally on your machine. In SourceTree Open SourceTree (you will find it in the Applications folder) Double-click on EpiTools repository in the Bookmarks list Click on Fetch to retrieve all the new branches of the repository Double click on the branch you are interested in (usual the ones under the folder release ) in order to check it out. Click on Pull to download all the new modifications made to the software Close SourceTree From the terminal For those of you who are into bash and terminal command Open a new terminal window Navigate to the directory where you cloned EpiTool repository Type the following commands: git status git fetch git checkout master git pull Exit the terminal Watch our video tutorials for installation for more help! EpiTools v2 Video Tutorials Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti on 22.08.14@14.58 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Installation"},{"location":"Quick_Guide/00_Installation/#installation","text":"EpiTools comes in a single flavour as software package for Matlab. We suggest to use the lastest Matlab version available (2014a) since we developed and tested for retrocompatibility only for a small number of old Matlab releases. At this time of the developing plan, you will still need a full and licenced installation on Matlab since our program is just a wrapped ensamble of matlab and c++ functions working together.","title":"Installation"},{"location":"Quick_Guide/00_Installation/#how-to-install-it-and-receive-our-latest-patches-or-updates","text":"","title":"How to install it and receive our latest patches or updates"},{"location":"Quick_Guide/00_Installation/#installing-epitools-from-our-website","text":"From the home page of EpiTools you can easily download the latest available version of EpiTools. This comes as a package where you will find only the needed files (no deprecated functions, crap files none wants on his machine). This is the most polished and clean version of EpiTools. Download the package from here Explode the package From the directory generated by exploding the package, double click on the launcher file correspondent to your operative system. Done! In case the launcher complains as follows: EpiTools_mac: Permission denied follow these instructions from a new console windows (in OsX, open a new Terminal session). cd directory-where-you-downloaded-and-exploded-epitools chmod +x EpiTools_mac Q: updates? A: We are working on a nice and neat implementation of auto updates. Unfortunately we are not ready yet to provide them automatically from EpiTools framework. However, the package you find here on our website will be always the latest version of our software! Q: Command line access? A: To ensure the best GUI flexibility with Epitools for matlab V2 we had to disable the command line access for now. You can still download EpiTools for matlab V1 with command line support from here . A simple tutorial script called EpiTools_CommandLine.m is provided as example in the main archive folder.","title":"Installing EpiTools from our website"},{"location":"Quick_Guide/00_Installation/#installing-epitools-from-the-git-repository","text":"Once you granted access to our repository, installing EpiTools is a piece of cake. You just have to clone our repository from our online versioning system (Bitbucket, a manager for GIT and MERCURIAL repositories). If you do not know what GIT is here you will find nice tutorials . Git comes automatically if you are using any version of SourceTree or any other gui software of your choice (here a selection) . You can do it in two different ways according to how do you feel about using the terminal or GUI applications.","title":"Installing EpiTools from the git repository"},{"location":"Quick_Guide/00_Installation/#in-sourcetree","text":"Clone our git repository (click on Actions>Clone>Clone in SourceTree) Select the release branch (master) and an appropriate empty folder i.e. /Users/your-username/epitools Open Matlab. In Matlab, navigate to the directory where you clone the repository and point to ./src/ Right click on EpiTools.m and select Run. Wait until the EpiTools interface will appear.","title":"In SourceTree"},{"location":"Quick_Guide/00_Installation/#in-terminal","text":"Point an empty directory Execute the following command git clone https://github.com/epitools/epitools-matlab.git Open Matlab. In Matlab, navigate to the directory where you clone the repository and point to ./src/ Right click on EpiTools.m and select Run. Wait until the EpiTools interface will appear.","title":"In Terminal"},{"location":"Quick_Guide/00_Installation/#updating-epitools","text":"If you cloned our repository you must have a git client version installed locally on your machine.","title":"Updating EpiTools"},{"location":"Quick_Guide/00_Installation/#in-sourcetree_1","text":"Open SourceTree (you will find it in the Applications folder) Double-click on EpiTools repository in the Bookmarks list Click on Fetch to retrieve all the new branches of the repository Double click on the branch you are interested in (usual the ones under the folder release ) in order to check it out. Click on Pull to download all the new modifications made to the software Close SourceTree","title":"In SourceTree"},{"location":"Quick_Guide/00_Installation/#from-the-terminal","text":"For those of you who are into bash and terminal command Open a new terminal window Navigate to the directory where you cloned EpiTool repository Type the following commands: git status git fetch git checkout master git pull Exit the terminal","title":"From the terminal"},{"location":"Quick_Guide/00_Installation/#watch-our-video-tutorials-for-installation-for-more-help","text":"EpiTools v2 Video Tutorials","title":"Watch our video tutorials for installation for more help!"},{"location":"Quick_Guide/00_Installation/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Quick_Guide/00_Installation/#this-page-was-written-by-lorenzo-gatti-on-2208141458","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti on 22.08.14@14.58"},{"location":"Quick_Guide/01_CreateAnalysisFile/","text":"Home Create a new analysis file EpiTools stores all the data associated with your analysis session in an XML file which can be accessed in writing and reading mode with any kind of xml IDE or text editors. How to create a new analysis file Create from EpiTools interface Any new analysis generated from EpiTools interface is the result of a guided process where the user fills all the required informations via the GUI interface provided. The content of the analysis file defines completely the structure of the analysis and it guarantees its reproducibility. From the main EpiTools interface, click on File>New Analysis . Specify the path where the analysis file will be saved. Specify the path where the images have been stored. Give a memorisable name and assign a version to the analysis you are currently building. If you can see all the image files you have stored in the folder specified at point 3, then press Confirm and Continue Add specifics on loaded image files EpiTools gives the user the control on which files and on which data subset run the analysis. From the main EpiTools interface, click on File>File Properties . You will see a table showing the image files that have been found in the image directory. The following columns can be modified by the user in order to restrict the analysis only to a certain subset of the images. Include? : This is a boolean control which is by default set to true i.e. all the files with a tick in this box will be used for the current analysis Z planes? : This control specifies the index of the z planes to include in the analysis process i.e. [1,2-6,8-10,12] will result in including planes 1,2,3,4,5,6,8,9,10,12 Channel? : This control specifies the index of the channels to include in the analysis process i.e. [1-2] will result in including channels 1,2 Time points? : This control specifies the index of the time points to include in the analysis process i.e. [1,2-6,8-10,12] will result in including time points 1,2,3,4,5,6,8,9,10,12 You can propagate the informations stored in a single cell in a particular column of the table to all the column or a limited subset of the cells simply following this procedure: Select with the left click of the mouse the first cell you want the value to propagate to. Hold CAPS. Select with the left click of the mouse the last cell you want the value to propagate to. Write the new value in the last cell. Press ENTER. Our instructions are too complicated? Are u lost? Watch our video tutorials! EpiTools v2 Video Tutorials Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti on 22.08.14@15.41 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"01 CreateAnalysisFile"},{"location":"Quick_Guide/01_CreateAnalysisFile/#home","text":"","title":"Home"},{"location":"Quick_Guide/01_CreateAnalysisFile/#create-a-new-analysis-file","text":"EpiTools stores all the data associated with your analysis session in an XML file which can be accessed in writing and reading mode with any kind of xml IDE or text editors.","title":"Create a new analysis file"},{"location":"Quick_Guide/01_CreateAnalysisFile/#how-to-create-a-new-analysis-file","text":"","title":"How to create a new analysis file"},{"location":"Quick_Guide/01_CreateAnalysisFile/#create-from-epitools-interface","text":"Any new analysis generated from EpiTools interface is the result of a guided process where the user fills all the required informations via the GUI interface provided. The content of the analysis file defines completely the structure of the analysis and it guarantees its reproducibility. From the main EpiTools interface, click on File>New Analysis . Specify the path where the analysis file will be saved. Specify the path where the images have been stored. Give a memorisable name and assign a version to the analysis you are currently building. If you can see all the image files you have stored in the folder specified at point 3, then press Confirm and Continue","title":"Create from EpiTools interface"},{"location":"Quick_Guide/01_CreateAnalysisFile/#add-specifics-on-loaded-image-files","text":"EpiTools gives the user the control on which files and on which data subset run the analysis. From the main EpiTools interface, click on File>File Properties . You will see a table showing the image files that have been found in the image directory. The following columns can be modified by the user in order to restrict the analysis only to a certain subset of the images. Include? : This is a boolean control which is by default set to true i.e. all the files with a tick in this box will be used for the current analysis Z planes? : This control specifies the index of the z planes to include in the analysis process i.e. [1,2-6,8-10,12] will result in including planes 1,2,3,4,5,6,8,9,10,12 Channel? : This control specifies the index of the channels to include in the analysis process i.e. [1-2] will result in including channels 1,2 Time points? : This control specifies the index of the time points to include in the analysis process i.e. [1,2-6,8-10,12] will result in including time points 1,2,3,4,5,6,8,9,10,12 You can propagate the informations stored in a single cell in a particular column of the table to all the column or a limited subset of the cells simply following this procedure: Select with the left click of the mouse the first cell you want the value to propagate to. Hold CAPS. Select with the left click of the mouse the last cell you want the value to propagate to. Write the new value in the last cell. Press ENTER.","title":"Add specifics on loaded image files"},{"location":"Quick_Guide/01_CreateAnalysisFile/#our-instructions-are-too-complicated-are-u-lost-watch-our-video-tutorials","text":"EpiTools v2 Video Tutorials","title":"Our instructions are too complicated? Are u lost? Watch our video tutorials!"},{"location":"Quick_Guide/01_CreateAnalysisFile/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Quick_Guide/01_CreateAnalysisFile/#this-page-was-written-by-lorenzo-gatti-on-2208141541","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti on 22.08.14@15.41"},{"location":"Quick_Guide/02_OpenAnalysisSM/","text":"Home Open an analysis file Analysis files can be generated and executed on a certain machine or executed on another one as well. In order to guarantee file/directory integrity between platforms the software asks some questions in case the analysis folder or the image directory are not found. Opening an analysis file previously generated on the same machine From the main EpiTools interface, click on File>Open Analysis . Specify the path where the analysis file has been previously saved. Done! Opening an analysis file previously generated on another machine From the main EpiTools interface, click on File>Open Analysis . Specify the path where the analysis file has been previously saved. The program will complain if the absolute paths stored for image directory and analysis directory do not correspond between the machine where the file has been generated and the one where the file has been opened. In this case the software throws an exception asking the user to indicate where the folders have been moved. Specify the new location of the unfound directories Done! Our instructions are too complicated? Are u lost? Watch our video tutorials! EpiTools v2 Video Tutorials Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti on 22.08.14@14.58 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"02 OpenAnalysisSM"},{"location":"Quick_Guide/02_OpenAnalysisSM/#home","text":"","title":"Home"},{"location":"Quick_Guide/02_OpenAnalysisSM/#open-an-analysis-file","text":"Analysis files can be generated and executed on a certain machine or executed on another one as well. In order to guarantee file/directory integrity between platforms the software asks some questions in case the analysis folder or the image directory are not found.","title":"Open an analysis file"},{"location":"Quick_Guide/02_OpenAnalysisSM/#opening-an-analysis-file-previously-generated-on-the-same-machine","text":"From the main EpiTools interface, click on File>Open Analysis . Specify the path where the analysis file has been previously saved. Done!","title":"Opening an analysis file previously generated on the same machine"},{"location":"Quick_Guide/02_OpenAnalysisSM/#opening-an-analysis-file-previously-generated-on-another-machine","text":"From the main EpiTools interface, click on File>Open Analysis . Specify the path where the analysis file has been previously saved. The program will complain if the absolute paths stored for image directory and analysis directory do not correspond between the machine where the file has been generated and the one where the file has been opened. In this case the software throws an exception asking the user to indicate where the folders have been moved. Specify the new location of the unfound directories Done!","title":"Opening an analysis file previously generated on another machine"},{"location":"Quick_Guide/02_OpenAnalysisSM/#our-instructions-are-too-complicated-are-u-lost-watch-our-video-tutorials","text":"EpiTools v2 Video Tutorials","title":"Our instructions are too complicated? Are u lost? Watch our video tutorials!"},{"location":"Quick_Guide/02_OpenAnalysisSM/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Quick_Guide/02_OpenAnalysisSM/#this-page-was-written-by-lorenzo-gatti-on-2208141458","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti on 22.08.14@14.58"},{"location":"Quick_Guide/03_RunModules/","text":"Home Run your first analysis module EpiTools separates each analysis step in modules which can executed independently. Their order is given by the pipeline that the user wants to implement and execute on the particular set of images he acquired. Analysis modules can be called from the Actions menu in the menu bar. Run modules Select a module to run from Action menu In case the module requires any additional settings, you will be prompted with a windows where you will be able to specified the required settings. On analysis module completion, you will be able to visualise the results (if the module generates them) and you will see a new node in the analysis workflow tree. Available modules in release 0.1b Projection Registration Contrast Enhancement Segmentation Re-segmentation Polygon Masking Tracking Correction Skeleton generation Our instructions are too complicated? Are u lost? Watch our video tutorials! EpiTools v2 Video Tutorials Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti on 22.08.14@14.58 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"03 RunModules"},{"location":"Quick_Guide/03_RunModules/#home","text":"","title":"Home"},{"location":"Quick_Guide/03_RunModules/#run-your-first-analysis-module","text":"EpiTools separates each analysis step in modules which can executed independently. Their order is given by the pipeline that the user wants to implement and execute on the particular set of images he acquired. Analysis modules can be called from the Actions menu in the menu bar.","title":"Run your first analysis module"},{"location":"Quick_Guide/03_RunModules/#run-modules","text":"Select a module to run from Action menu In case the module requires any additional settings, you will be prompted with a windows where you will be able to specified the required settings. On analysis module completion, you will be able to visualise the results (if the module generates them) and you will see a new node in the analysis workflow tree.","title":"Run modules"},{"location":"Quick_Guide/03_RunModules/#available-modules-in-release-01b","text":"Projection Registration Contrast Enhancement Segmentation Re-segmentation Polygon Masking Tracking Correction Skeleton generation","title":"Available modules in release 0.1b"},{"location":"Quick_Guide/03_RunModules/#our-instructions-are-too-complicated-are-u-lost-watch-our-video-tutorials","text":"EpiTools v2 Video Tutorials","title":"Our instructions are too complicated? Are u lost? Watch our video tutorials!"},{"location":"Quick_Guide/03_RunModules/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Quick_Guide/03_RunModules/#this-page-was-written-by-lorenzo-gatti-on-2208141458","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti on 22.08.14@14.58"},{"location":"Quick_Guide/04_Connecting_icy/","text":"Visualize results in icy Summary Use the bio-imaging software icy to display the output of every module. Setup 1. In Icy install the following plugins matlab communicator plugin by Yoann Le Montagner matlab X Server by Yoann Le Montagner 2. In EpiTools Open icy in background Click on the eye logo in the menu bar of EpiTools locate your icy plugin folder to detect the matlab communicator plugin e.g. applications/icy/plugins/ylemontag/matlabcommunicator The connection with icy is now established. If you already opened an analysis you can test the connection by right-clicking the projection-module and clicking visualize results. The projected image should now appear as sequence in icy. Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Davide Heller on 30.09.14@18:10 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"04 Connecting icy"},{"location":"Quick_Guide/04_Connecting_icy/#visualize-results-in-icy","text":"","title":"Visualize results in icy"},{"location":"Quick_Guide/04_Connecting_icy/#summary","text":"Use the bio-imaging software icy to display the output of every module.","title":"Summary"},{"location":"Quick_Guide/04_Connecting_icy/#setup","text":"","title":"Setup"},{"location":"Quick_Guide/04_Connecting_icy/#1-in-icy","text":"install the following plugins matlab communicator plugin by Yoann Le Montagner matlab X Server by Yoann Le Montagner","title":"1. In Icy"},{"location":"Quick_Guide/04_Connecting_icy/#2-in-epitools","text":"Open icy in background Click on the eye logo in the menu bar of EpiTools locate your icy plugin folder to detect the matlab communicator plugin e.g. applications/icy/plugins/ylemontag/matlabcommunicator The connection with icy is now established. If you already opened an analysis you can test the connection by right-clicking the projection-module and clicking visualize results. The projected image should now appear as sequence in icy.","title":"2. In EpiTools"},{"location":"Quick_Guide/04_Connecting_icy/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Quick_Guide/04_Connecting_icy/#this-page-was-written-by-davide-heller-on-3009141810","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Davide Heller on 30.09.14@18:10"},{"location":"Quick_Guide/05_Multiple_ROIs/","text":"Step-by-Step guide to export skeletons from multiple ROIs Summary Starting from the beta release 2.1.13-NightBuilds-75 you can export skeletons of different ROIs taken on the image you processed with EpiTools. How-to Execute Polygon mask (ROI) [1] a. Define the 1st cropping area a. A new tag will appear in the default pool Execute Polygon mask (ROI) [2] a. Specify the [comparative mode] execution a. A new pool will appear in the list of available pools b. Define the 2nd cropping area a. A new tag will appear in the new pool Exporting image skeletons using the 1st polygon mask : Select \u201c Generate skeletons \u201d from the analysis menu The program will ask to move back to the default poll, click [Ok] Select \u201c Use Polygon crop \u201d from the popup window Your skeletons will be exported in the analysis folder under the [skeletons] subfolder Exporting image skeletons using the 2nd polygon mask : Click on [Manage active pools] from the toolbar Select the second temporary pool from the list of available pool. Select \u201c Generate skeletons \u201d from the analysis menu The program will ask in which modality you want to execute the action, select [overwrite module] The program will ask to move back to the default poll, answer [No] Select \u201c Use Polygon crop \u201d from the popup window Your skeletons will be exported in the analysis folder in the [skeleton_current.timestamp] subfolder Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti on 10.04.16@11:45 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Step-by-Step guide to export skeletons from multiple ROIs"},{"location":"Quick_Guide/05_Multiple_ROIs/#step-by-step-guide-to-export-skeletons-from-multiple-rois","text":"","title":"Step-by-Step guide to export skeletons from multiple ROIs"},{"location":"Quick_Guide/05_Multiple_ROIs/#summary","text":"Starting from the beta release 2.1.13-NightBuilds-75 you can export skeletons of different ROIs taken on the image you processed with EpiTools.","title":"Summary"},{"location":"Quick_Guide/05_Multiple_ROIs/#how-to","text":"Execute Polygon mask (ROI) [1] a. Define the 1st cropping area a. A new tag will appear in the default pool Execute Polygon mask (ROI) [2] a. Specify the [comparative mode] execution a. A new pool will appear in the list of available pools b. Define the 2nd cropping area a. A new tag will appear in the new pool Exporting image skeletons using the 1st polygon mask : Select \u201c Generate skeletons \u201d from the analysis menu The program will ask to move back to the default poll, click [Ok] Select \u201c Use Polygon crop \u201d from the popup window Your skeletons will be exported in the analysis folder under the [skeletons] subfolder Exporting image skeletons using the 2nd polygon mask : Click on [Manage active pools] from the toolbar Select the second temporary pool from the list of available pool. Select \u201c Generate skeletons \u201d from the analysis menu The program will ask in which modality you want to execute the action, select [overwrite module] The program will ask to move back to the default poll, answer [No] Select \u201c Use Polygon crop \u201d from the popup window Your skeletons will be exported in the analysis folder in the [skeleton_current.timestamp] subfolder","title":"How-to"},{"location":"Quick_Guide/05_Multiple_ROIs/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Quick_Guide/05_Multiple_ROIs/#this-page-was-written-by-lorenzo-gatti-on-1004161145","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti on 10.04.16@11:45"},{"location":"Support/FAQ/","text":"Frequently Asked Questions We have collated a linux virtual machine with all the requirements installed for epitools to work. Please, send an email to Pablo Vicente Munuera to request it. Which version of Icy works with Epitools? Recently, we have identified an issue from Icy versions 2.1.X onwards. We highly recommend to use Icy version 2.0.3, which unfortunately may not work with some operating systems anymore. Drop us an email and we can provide you with a working Icy version and how to open it. Which Matlab versions do you support? Matlab 2013b and 2014a are the reference versions for which we support EpiTools for Matlab v2 for Matlab versions prior to 2013b : Due to dependencies on core functions which are only present from 2013b onwards we currently can't offer support for EpiTools for Matlab v2 on earlier Matlab versions. Albeit not further maintained you can still download our previous version ( EpiTools for Matlab v1 ) which has been successfully tested on Matlab 2012b. As for time of writing (January 2016) v1 has only a slightly more reduced GUI functionality (limited comparison mode and viewing mode) but offers all modules as EpiTools for Matlab V2 as well as a command line access (you can find a sample script in the main directory). for Matlab versions after 2014a : With the release of Matlab version 2014b Mathworks changed the GUI system, which we had leveraged on to build the EpiTools for Matlab GUI, and how java programs are interfaced with it. Adapting to these changes and keeping the retrocompatability requires a major change in the code and we currently evaluating several options as solution. Feel free to write us if you have suggestions or comments on how to solve the compatability with future Matlab versions. Which Matlab toolboxes are required? Image Processing Toolbox Statistics Toolbox Is parallel computing supported? Currently (v.2.1.5) parallel computing support is broken due to a software regression and the challenge to support multiple Matlab versions, which handle Matlab workers differently. Please do not change the default number of Processors unless you are making custom modifications to the code. Notice: The Parallel Computing Toolbox is required for this feature Why are there two tracking algorithms in EpiTools? The tracking algorithm in EpiTools for Matlab (i.e. the assisted correction step) is optimized to be fast in order to allow a fluent user interaction. This means that it does not extract any information about divisions or eliminations or resist stronger time shifts. This is why we build a more elaborate algorithm in icy. The graph matching algorithms included in EpiTools for Icy are able to detect divisions and eliminations as well as resist better to local movement (e.g. swapping). So whenever the icy tracking is viable we recommend it. The included variants (\"stable marriage\" and \"hungarian\") apply the same weighing schemes but differ in the way the optimal matching is computed, the hungarian being more global oriented and thus more time-consuming. Nevertheless, if the Matlab tracking is preferred, you can export the tracking information by clicking on the 3rd icon from the right in the tracking GUI (see screenshot [1]). The generated csv files can be imported in icy (see screenhot [2]). Is it possible to apply the same projection to another image channel Unfortunately this is currently not possible through our GUI but if you are fine with using the Matlab command line you can use the Surfaces.mat (2nd output of the Projection step) file to do it. The latter stores the z-origin number of every pixel in the projected image. We provide a small example script that shows how to apply it to an indivual time point. You can download it here . How to export the result of an intermediate step as tiff image You can export images as tiff through the context menu, by clicking on the relative item in the left panel and selecting the TIFF export option. (See screenshot below for the clahe step) Alternatively you can also send the images directly to icy from matlab, for this method you can find more information in Quick Guide Connecting icy . This page was written by Davide Heller on 05.02.2016@15:30 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Frequently Asked Questions"},{"location":"Support/FAQ/#frequently-asked-questions","text":"We have collated a linux virtual machine with all the requirements installed for epitools to work. Please, send an email to Pablo Vicente Munuera to request it.","title":"Frequently Asked Questions"},{"location":"Support/FAQ/#which-version-of-icy-works-with-epitools","text":"Recently, we have identified an issue from Icy versions 2.1.X onwards. We highly recommend to use Icy version 2.0.3, which unfortunately may not work with some operating systems anymore. Drop us an email and we can provide you with a working Icy version and how to open it.","title":"Which version of Icy works with Epitools?"},{"location":"Support/FAQ/#which-matlab-versions-do-you-support","text":"Matlab 2013b and 2014a are the reference versions for which we support EpiTools for Matlab v2 for Matlab versions prior to 2013b : Due to dependencies on core functions which are only present from 2013b onwards we currently can't offer support for EpiTools for Matlab v2 on earlier Matlab versions. Albeit not further maintained you can still download our previous version ( EpiTools for Matlab v1 ) which has been successfully tested on Matlab 2012b. As for time of writing (January 2016) v1 has only a slightly more reduced GUI functionality (limited comparison mode and viewing mode) but offers all modules as EpiTools for Matlab V2 as well as a command line access (you can find a sample script in the main directory). for Matlab versions after 2014a : With the release of Matlab version 2014b Mathworks changed the GUI system, which we had leveraged on to build the EpiTools for Matlab GUI, and how java programs are interfaced with it. Adapting to these changes and keeping the retrocompatability requires a major change in the code and we currently evaluating several options as solution. Feel free to write us if you have suggestions or comments on how to solve the compatability with future Matlab versions.","title":"Which Matlab versions do you support?"},{"location":"Support/FAQ/#which-matlab-toolboxes-are-required","text":"Image Processing Toolbox Statistics Toolbox","title":"Which Matlab toolboxes are required?"},{"location":"Support/FAQ/#is-parallel-computing-supported","text":"Currently (v.2.1.5) parallel computing support is broken due to a software regression and the challenge to support multiple Matlab versions, which handle Matlab workers differently. Please do not change the default number of Processors unless you are making custom modifications to the code. Notice: The Parallel Computing Toolbox is required for this feature","title":"Is parallel computing supported?"},{"location":"Support/FAQ/#why-are-there-two-tracking-algorithms-in-epitools","text":"The tracking algorithm in EpiTools for Matlab (i.e. the assisted correction step) is optimized to be fast in order to allow a fluent user interaction. This means that it does not extract any information about divisions or eliminations or resist stronger time shifts. This is why we build a more elaborate algorithm in icy. The graph matching algorithms included in EpiTools for Icy are able to detect divisions and eliminations as well as resist better to local movement (e.g. swapping). So whenever the icy tracking is viable we recommend it. The included variants (\"stable marriage\" and \"hungarian\") apply the same weighing schemes but differ in the way the optimal matching is computed, the hungarian being more global oriented and thus more time-consuming. Nevertheless, if the Matlab tracking is preferred, you can export the tracking information by clicking on the 3rd icon from the right in the tracking GUI (see screenshot [1]). The generated csv files can be imported in icy (see screenhot [2]).","title":"Why are there two tracking algorithms in EpiTools?"},{"location":"Support/FAQ/#is-it-possible-to-apply-the-same-projection-to-another-image-channel","text":"Unfortunately this is currently not possible through our GUI but if you are fine with using the Matlab command line you can use the Surfaces.mat (2nd output of the Projection step) file to do it. The latter stores the z-origin number of every pixel in the projected image. We provide a small example script that shows how to apply it to an indivual time point. You can download it here .","title":"Is it possible to apply the same projection to another image channel"},{"location":"Support/FAQ/#how-to-export-the-result-of-an-intermediate-step-as-tiff-image","text":"You can export images as tiff through the context menu, by clicking on the relative item in the left panel and selecting the TIFF export option. (See screenshot below for the clahe step) Alternatively you can also send the images directly to icy from matlab, for this method you can find more information in Quick Guide Connecting icy . This page was written by Davide Heller on 05.02.2016@15:30 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"How to export the result of an intermediate step as tiff image"},{"location":"Support/Known_Issues/","text":"Known issues In this section you will find the known issues affecting the current released EpiTools versions and their resolution status. Fell free to comment, vote, post and send us issues. Issues Date Version affected Description Issue tracker 17 Apr 2015 07:54 (GMT +2:00) EpiTools 2.1 EpiTools Graphic engine is not compatible with Matlab version above 2014a ECS-146 10 Sept 2021 12:00 Epitools 2.1 Epitools stop working with Icy versions from 2.1.X. Last working version is 2.0.3 Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti on 22.08.14@15.41 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Known issues"},{"location":"Support/Known_Issues/#known-issues","text":"In this section you will find the known issues affecting the current released EpiTools versions and their resolution status. Fell free to comment, vote, post and send us issues.","title":"Known issues"},{"location":"Support/Known_Issues/#issues","text":"Date Version affected Description Issue tracker 17 Apr 2015 07:54 (GMT +2:00) EpiTools 2.1 EpiTools Graphic engine is not compatible with Matlab version above 2014a ECS-146 10 Sept 2021 12:00 Epitools 2.1 Epitools stop working with Icy versions from 2.1.X. Last working version is 2.0.3","title":"Issues"},{"location":"Support/Known_Issues/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Support/Known_Issues/#this-page-was-written-by-lorenzo-gatti-on-2208141541","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti on 22.08.14@15.41"},{"location":"Support/Latest_News/","text":"Support In this section you will find information about new software updates and what changes they include. Latest news 2016-07-22 EpiTools Icy Plugins v0.9.0 * Fixed uncontrolled plugin shape due to new features in the EzPlug library * Updated descriptions for some plugins 2016-04-22 EpiTools Icy Plugins v0.8.9 * Added layer option panel for CellEditor with buttons to confirm or undo modifications * Added the possibility to Convert icy ROIs like rectangles&squares to CellColorTag * Added an import functionality for CellColorTag to use previous tags * Fixed missing labeling of excel sheets in EdgeColorTag 2016-02-09 EpiTools Matlab: Parallel Computing Support * Due to a software regression the parallel computing capabilities are currently broken. As consequence, please do not increase the number of processors in the input GUI. We hope to re-add the support in the next release! * We added an FAQ section to the wiki [Support > Faq] for reported problems 2015-12-15 EpiTools Icy Plugins v0.8.8 * Fixed excel sheet export on EDGE_INTENSITY overlay (for single time points output file would be empty) * Fixed relative intensity option in EDGE_INTENSITY overlay (error on icy >= 1.7) 2015-12-03 EpiTools license change and Compatibility on OSX 10.11 * EpiTools is now licensed with GPLv3 to comply with all dependencies * OSX 10.11 El Capitan: When starting a new analysis, file choice windows lack titles but functionality is preserved. We are working on a solution. 2015-11-11 EpiTools Matlab v2.1.5 * Projection module: surface files containing the 2nd gridfit estimation are now saved 2015-11-11 EpiTools Icy Plugins v0.8.7 * New Plugin: CellSurface to visualize the gridfit surface estimation from EpiTools for Matlab * New Overlay: Cell Projection colors every cell by the z-component through the gridfit estimation * Added option to automatically read all available time points for CellGraph * Developer: Added Test Overlay example overlay to experiment new ideas with ease. * Toolbar update: to add the icon of CellSurface to the EpiTools bar please update the Workspace file 2015-10-12 EpiTools Icy Plugins v0.8.6 * Added edge geometry selection mode in EdgeColorTag overlay: exclude, include or select the vertex geometry * Added option to analyze entire time-series in EdgeIntensity overlay * Added option to select channel to measure in EdgeColorTag and EdgeIntensity * Added cell major and minor axis data in XLS export for EdgeOrientation overlay * Developer: eclipse project files was added to git repository to allow easier import * Fix: Crash when attempting to put sequence with stGraph overlays into 3DVTK mode 2015-08-10 EpiTools Icy Plugins v0.8.5 * Added EdgeOrientation Plugin to retrieve the orientation of edges * Added Summary statics option for Intensity readout: Mean, Max, Min, SD, Sum 2015-06-02 EpiTools Icy Plugins v0.8.4 * All color gradient overlays now use the optionPanel for gradient control * Better description for Gradient controls in optionPanel * Fixed normalization procedure for color gradient, i.e (x - min)/(max - min) instead of (x - min)/max 2015-06-01 EpiTools Icy Plugins v0.8.3 * Changed default behavior of excluding outer most segmentation border on input * Changed default border exclusion behavior when LOAD_CSV_TRACKING option is used 2015-05-29 EpiTools Icy Plugins v0.8.2 * Trial gradient control for Area Gradient Overlay from OptionLayerMenu instead of plugin * Updated to final MIT license 2015-05-22 EpiTools Icy Plugins v0.8.1 * Major code refactoring and documentation for upcoming release * Added icons to the plugins, to enable these please substitute the entire davhelle folder 2015-04-29 EpiTools Icy Plugins v0.8.0 * Added Legends for all overlays with hide/show option in the layer options menu * IntensityOverlay: added raw option and adjustable buffer * Removed MOSAIC tracking algorithm because of deprecated support * Expanded clicking area for EdgeMarker 17 Apr 2015 07:54 (GMT +2:00) The latest Matlab versions 2014b and 2015a present some issues due the new graphics environment. We currently cannot guarantee full compatability. We reccomend using 2014a if you have access to it. For Command line use we recommend using version 1 stable. A sample script can be found in the main folder. 2015-04-13 EpiTools Icy Plugins v0.7.9 * Bug-fix for folder selection in CellExport causing UIthreading Violation 2015-04-11 EpiTools Icy Plugins v0.7.8 * CellGraph gui simplification, no need to specify skeleton type anymore * CellExport now contains the WKT and CSV save option previously contained in CellGraph * CellExport can export the current graph as TIFF skeleton files compatible with CellEditor 2015-04-10 EpiTools Icy Plugins v0.7.7 * Removed deprecated internal wiki which was making the archive unnecessarily big 2015-04-10 EpiTools Icy Plugins v0.7.6 * Changed overlay names in CellOverlay for a better overview * Added EdgeTag Overlay to follow selected Edges over time and color code them as for CellTag. Export also measure intensity of underlying image 2015-03-30 EpiTools Icy Plugins v0.7.5 * Bug fix for PdfPrinter when selecting a frame no which is not in the graph but in the image sequence * CellFinder updated with better GUI description 2015-03-27 EpiTools Icy Plugins v0.7.4 * Solved ellipseFitter bug due to hardcoded image size parameters 2015-03-27 EpiTools Icy Plugins v0.7.3 * DivisionOrientation was extended with GUI commands to set the start/length of avg. * small changes in overlay names, e.g. CELL_OVERLAY -> CELL_OUTLINE 2015-03-26 EpiTools Icy Plugins v0.7.2 * CellTag/CellMarker now propagates the click through all cells for visual help * CellGraph now takes any file name without requirements when t is 1 (single time point) * Cell_Displacement overlay has now its own menu and colors are explained * Cell_Tracking overlay menu contains color code explanation * Divisions and Elimination submenu was updated. Co-occurences of eliminations and divisions are now magenta (previously yellow) and are shown from the first frame onwards. 2015-03-25 EpiTools Icy Plugins v0.7.1 * PdfPrinter: export a vector graphic from all currently added Overlays to the image * CellMarkerOverlay now exports more fields including elongation and division * added Always_tracked_cells Overlay to visualize in Orange continuously tracked cells 2015-03-24 EpiTools Icy Plugins v0.7.0 * CellEditor: re-implemented, now independent of painter plugin and easier to use * CellExporter: new plugin collecting export options such as a single XLS file and GraphML * CellOverlay: adapted all overlays to support the side panel XLS export option * General GUI improvements to simplify and guide usage ------------------------------------------------------- 19 Dec 2014 07:54 (GMT +2:00) We are pleased to announce the release of the EpiTools 2.0 (beta version). Due to current coding phase, this release is still under development and it should be used only for testing. Keep us posted with your feedbacks, bug reports and suggestions. This is the last release for this year! EpiTools team wishes you all a Merry Christmas and Happy New Year 2015. ------------------------------------------------------- 14 Nov 2014 15:11 (GMT +2:00) EpiTools Tracking interface does not respond to user inputs with the latest version of MATLAB 2014b. We are currently working to solve this problem. In order to select a previous version of MATLAB installed on your machine, change the following line in the launcher (linux/mac): from last_installation=${installation_directories[$tLen-1]} to last_installation=${installation_directories[$tLen-2]} ------------------------------------------------------- 2 Oct 2014 11:34 (GMT +2:00) Due to a bug affecting user preferences saving and reading, we just uplaod a new HOTFIX-94c557a. In order to make it works, in case you have downloaded EpiTools before 2 Oct, please download it again or pull the update from git. Remove .usersettings.xml or usersettings.xml from epitools/src folder. Restart EpiTools. Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti and Davide Heller on 22.04.16@15.41 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Support"},{"location":"Support/Latest_News/#support","text":"In this section you will find information about new software updates and what changes they include.","title":"Support"},{"location":"Support/Latest_News/#latest-news","text":"2016-07-22 EpiTools Icy Plugins v0.9.0 * Fixed uncontrolled plugin shape due to new features in the EzPlug library * Updated descriptions for some plugins 2016-04-22 EpiTools Icy Plugins v0.8.9 * Added layer option panel for CellEditor with buttons to confirm or undo modifications * Added the possibility to Convert icy ROIs like rectangles&squares to CellColorTag * Added an import functionality for CellColorTag to use previous tags * Fixed missing labeling of excel sheets in EdgeColorTag 2016-02-09 EpiTools Matlab: Parallel Computing Support * Due to a software regression the parallel computing capabilities are currently broken. As consequence, please do not increase the number of processors in the input GUI. We hope to re-add the support in the next release! * We added an FAQ section to the wiki [Support > Faq] for reported problems 2015-12-15 EpiTools Icy Plugins v0.8.8 * Fixed excel sheet export on EDGE_INTENSITY overlay (for single time points output file would be empty) * Fixed relative intensity option in EDGE_INTENSITY overlay (error on icy >= 1.7) 2015-12-03 EpiTools license change and Compatibility on OSX 10.11 * EpiTools is now licensed with GPLv3 to comply with all dependencies * OSX 10.11 El Capitan: When starting a new analysis, file choice windows lack titles but functionality is preserved. We are working on a solution. 2015-11-11 EpiTools Matlab v2.1.5 * Projection module: surface files containing the 2nd gridfit estimation are now saved 2015-11-11 EpiTools Icy Plugins v0.8.7 * New Plugin: CellSurface to visualize the gridfit surface estimation from EpiTools for Matlab * New Overlay: Cell Projection colors every cell by the z-component through the gridfit estimation * Added option to automatically read all available time points for CellGraph * Developer: Added Test Overlay example overlay to experiment new ideas with ease. * Toolbar update: to add the icon of CellSurface to the EpiTools bar please update the Workspace file 2015-10-12 EpiTools Icy Plugins v0.8.6 * Added edge geometry selection mode in EdgeColorTag overlay: exclude, include or select the vertex geometry * Added option to analyze entire time-series in EdgeIntensity overlay * Added option to select channel to measure in EdgeColorTag and EdgeIntensity * Added cell major and minor axis data in XLS export for EdgeOrientation overlay * Developer: eclipse project files was added to git repository to allow easier import * Fix: Crash when attempting to put sequence with stGraph overlays into 3DVTK mode 2015-08-10 EpiTools Icy Plugins v0.8.5 * Added EdgeOrientation Plugin to retrieve the orientation of edges * Added Summary statics option for Intensity readout: Mean, Max, Min, SD, Sum 2015-06-02 EpiTools Icy Plugins v0.8.4 * All color gradient overlays now use the optionPanel for gradient control * Better description for Gradient controls in optionPanel * Fixed normalization procedure for color gradient, i.e (x - min)/(max - min) instead of (x - min)/max 2015-06-01 EpiTools Icy Plugins v0.8.3 * Changed default behavior of excluding outer most segmentation border on input * Changed default border exclusion behavior when LOAD_CSV_TRACKING option is used 2015-05-29 EpiTools Icy Plugins v0.8.2 * Trial gradient control for Area Gradient Overlay from OptionLayerMenu instead of plugin * Updated to final MIT license 2015-05-22 EpiTools Icy Plugins v0.8.1 * Major code refactoring and documentation for upcoming release * Added icons to the plugins, to enable these please substitute the entire davhelle folder 2015-04-29 EpiTools Icy Plugins v0.8.0 * Added Legends for all overlays with hide/show option in the layer options menu * IntensityOverlay: added raw option and adjustable buffer * Removed MOSAIC tracking algorithm because of deprecated support * Expanded clicking area for EdgeMarker 17 Apr 2015 07:54 (GMT +2:00) The latest Matlab versions 2014b and 2015a present some issues due the new graphics environment. We currently cannot guarantee full compatability. We reccomend using 2014a if you have access to it. For Command line use we recommend using version 1 stable. A sample script can be found in the main folder. 2015-04-13 EpiTools Icy Plugins v0.7.9 * Bug-fix for folder selection in CellExport causing UIthreading Violation 2015-04-11 EpiTools Icy Plugins v0.7.8 * CellGraph gui simplification, no need to specify skeleton type anymore * CellExport now contains the WKT and CSV save option previously contained in CellGraph * CellExport can export the current graph as TIFF skeleton files compatible with CellEditor 2015-04-10 EpiTools Icy Plugins v0.7.7 * Removed deprecated internal wiki which was making the archive unnecessarily big 2015-04-10 EpiTools Icy Plugins v0.7.6 * Changed overlay names in CellOverlay for a better overview * Added EdgeTag Overlay to follow selected Edges over time and color code them as for CellTag. Export also measure intensity of underlying image 2015-03-30 EpiTools Icy Plugins v0.7.5 * Bug fix for PdfPrinter when selecting a frame no which is not in the graph but in the image sequence * CellFinder updated with better GUI description 2015-03-27 EpiTools Icy Plugins v0.7.4 * Solved ellipseFitter bug due to hardcoded image size parameters 2015-03-27 EpiTools Icy Plugins v0.7.3 * DivisionOrientation was extended with GUI commands to set the start/length of avg. * small changes in overlay names, e.g. CELL_OVERLAY -> CELL_OUTLINE 2015-03-26 EpiTools Icy Plugins v0.7.2 * CellTag/CellMarker now propagates the click through all cells for visual help * CellGraph now takes any file name without requirements when t is 1 (single time point) * Cell_Displacement overlay has now its own menu and colors are explained * Cell_Tracking overlay menu contains color code explanation * Divisions and Elimination submenu was updated. Co-occurences of eliminations and divisions are now magenta (previously yellow) and are shown from the first frame onwards. 2015-03-25 EpiTools Icy Plugins v0.7.1 * PdfPrinter: export a vector graphic from all currently added Overlays to the image * CellMarkerOverlay now exports more fields including elongation and division * added Always_tracked_cells Overlay to visualize in Orange continuously tracked cells 2015-03-24 EpiTools Icy Plugins v0.7.0 * CellEditor: re-implemented, now independent of painter plugin and easier to use * CellExporter: new plugin collecting export options such as a single XLS file and GraphML * CellOverlay: adapted all overlays to support the side panel XLS export option * General GUI improvements to simplify and guide usage ------------------------------------------------------- 19 Dec 2014 07:54 (GMT +2:00) We are pleased to announce the release of the EpiTools 2.0 (beta version). Due to current coding phase, this release is still under development and it should be used only for testing. Keep us posted with your feedbacks, bug reports and suggestions. This is the last release for this year! EpiTools team wishes you all a Merry Christmas and Happy New Year 2015. ------------------------------------------------------- 14 Nov 2014 15:11 (GMT +2:00) EpiTools Tracking interface does not respond to user inputs with the latest version of MATLAB 2014b. We are currently working to solve this problem. In order to select a previous version of MATLAB installed on your machine, change the following line in the launcher (linux/mac): from last_installation=${installation_directories[$tLen-1]} to last_installation=${installation_directories[$tLen-2]} ------------------------------------------------------- 2 Oct 2014 11:34 (GMT +2:00) Due to a bug affecting user preferences saving and reading, we just uplaod a new HOTFIX-94c557a. In order to make it works, in case you have downloaded EpiTools before 2 Oct, please download it again or pull the update from git. Remove .usersettings.xml or usersettings.xml from epitools/src folder. Restart EpiTools.","title":"Latest news"},{"location":"Support/Latest_News/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Support/Latest_News/#this-page-was-written-by-lorenzo-gatti-and-davide-heller-on-2204161541","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti and Davide Heller on 22.04.16@15.41"},{"location":"Support/Release_Notes/","text":"Release note We collect some useful informations on the current released versions of EpiTools and EpiTools for icy. For more live feedback on our current development workflow, please refer to our Issue manager: Access to Atlassian Jira Release Notes - EpiTools Core System - Version Version 2 stable Bug [ ECS-23 ] - Parfor issue for versions prior to 2013b [ ECS-29 ] - ImproveContrast does not support Sandboxing [ ECS-88 ] - Tracking GUI is broken from Command Line [ ECS-118 ] - Test segmentation breaks the modules to follow [ ECS-127 ] - Open Analysis does not recognize wrong XML files and throws error [ ECS-133 ] - imshow does not handle gif files [ ECS-137 ] - Error while evaluating uimenu Callback [ ECS-138 ] - Cannot generate skeletons in version 2 [ ECS-140 ] - Segmentation step stopped with Error [ ECS-141 ] - Left sidebar main GUI is incorrectly rendered on retina display and small laptop displays [ ECS-145 ] - Built-in registration method does not provide valuable outputs [ ECS-147 ] - Delete tracks in tracking module produces inconsistent results when selected from keyboard than when selected from toolbar [ ECS-148 ] - Tracking interface is does not show correctly on low resolution screens Improvement [ ECS-24 ] - Missing Flexibility between steps [ ECS-43 ] - Integration sub windows in main window New Feature [ ECS-45 ] - Auto-updates [ ECS-46 ] - Pipeline execution [ ECS-52 ] - Capability of analyzing single Z or T samples [ ECS-54 ] - Comparative mode for parameter evaluation [ ECS-100 ] - Unfolding tissue [ ECS-101 ] - Submit analysis file and log reports to remote machine collector [ ECS-112 ] - Add a Trial button to Projection like for Segmentation [ ECS-125 ] - Client-Server Daemon: Socket to instantiate communication between Server and Client instances [ ECS-136 ] - Implementing procedures for toolbar controls in dataexplorer_imageview.m [ ECS-139 ] - Implement universal function for loading images during module execution [ ECS-149 ] - Hold on specific function during manual tracking correction Story [ ECS-35 ] - Swiss made software certification [ ECS-42 ] - Discuss common header for all files Release Notes - EpiTools Core System - Version Version 1 stable Sub-task [ ECS-93 ] - Delete orphan tracks (white seeds found on image frame) [ ECS-114 ] - Define unique licence file associated to user [ ECS-115 ] - Create webpage to generate licence files and track users [ ECS-116 ] - Add disclaimer stating a NDA between EpiTools developers and Users [ ECS-117 ] - Preparing launchers [ ECS-121 ] - Add value in userpreferences.xml + add value in initiator script Technical task [ ECS-97 ] - Tracks quality assessment through histogram representation Bug [ ECS-9 ] - Time frames allocation [ ECS-10 ] - Bug in update values stored in uicontrols of FilePropertiesGUI.m [ ECS-12 ] - Error on closing EpiTools main window [ ECS-13 ] - Error when aborting new analysis menu on 2012b [ ECS-14 ] - Error when generating new meta file on Image Load launch on 2012b (debug in ppm is active) [ ECS-15 ] - strsplit is not supported by Matlab < R2013a [ ECS-17 ] - location saving ILabel [ ECS-18 ] - Actions menu items order [ ECS-19 ] - [Modules] CLAHE analysis step: result visualisation [ ECS-36 ] - Skelton creation is not working [ ECS-38 ] - Suppress warning [ ECS-39 ] - Update Clahe Figure Results After Accept/Discard decision [ ECS-40 ] - Analysis XML file is saved without integer index [ ECS-47 ] - Polygonal Crop is not integrated in Pipeline [ ECS-50 ] - Projection comparison produces error when accepting/discarding sandbox results [ ECS-73 ] - Log2Dev crashes due to call to embedded function @exists with a bad argument [ ECS-74 ] - Delete track (function invoked pressing \"k\" during tracking) crashes miserably [ ECS-75 ] - Tracking interface generates @drawnow() error [ ECS-76 ] - Error on closing EpiTools main GUI [ ECS-77 ] - Response time slider listener in tracking GUI retains manual correction labels [ ECS-78 ] - Save tracking session does not work when in whole view mode [ ECS-82 ] - Change URL Module GUIs to point to new wiki location [ ECS-84 ] - Initial LOG file in main directory is not deleted after copy to analysis folder [ ECS-85 ] - Error in retrieving xlim in @TrackingGUIwOldOK [ ECS-94 ] - Processor list in FilePropertiesGUI is associated to a function callback [ ECS-98 ] - delabelMode does not change its default values: will this code be executed? [ ECS-106 ] - EpiTools Crashes When User selects folder with no images [ ECS-113 ] - strsplit & strjoin are not supported before 2013a [ ECS-119 ] - Windows BAT launcher is still not working on Windows Platforms [ ECS-120 ] - Add ICY path to user preference file instead of analysis settings Improvement [ ECS-4 ] - Bug in Segmentation [ ECS-16 ] - Main window layout [ ECS-25 ] - Image Contrast needs further parametrization [ ECS-37 ] - Results of skeletonization settings object are many [ ECS-57 ] - Improvements for TrackingGUI [ ECS-102 ] - Main Image on Wiki home has a weird color scheme for segmentation image [ ECS-104 ] - Add Figure titles to debug figures in Projection Module [ ECS-105 ] - User cannot see images in initial image folder selection [ ECS-107 ] - GUIs on other platforms [ ECS-108 ] - clahe integration into segmentation New Feature [ ECS-7 ] - DataSpecifics - limitations [ ECS-20 ] - [GUI] @FileProperties allows the user to modify critical analysis parameters [ ECS-21 ] - Better documentation of Settings Class [ ECS-22 ] - [PROC] Missing correction step [ ECS-79 ] - Tools panel in tracking interface [ ECS-80 ] - Automatic local minimum finder for seed positioning during manual tracking [ ECS-99 ] - Activate single frame images analysis Task [ ECS-5 ] - Type casting (uint8 uint16) [ ECS-31 ] - Create project readme file for EpiTools 0.1 [ ECS-32 ] - Re-enable testing environment [ ECS-33 ] - Re-Segmentation Capability [ ECS-34 ] - Recall analysis modules guis from JTree [ ECS-55 ] - Minimal GUI for skeleton creation [ ECS-56 ] - Add Parameter Descriptions [ ECS-58 ] - Minimal GUI for PolygonCrop [ ECS-81 ] - Compiling C functions for windows platform x64 [ ECS-83 ] - Change Logging default before release [ ECS-86 ] - Redefining segmentation & tracking methods: cell seeds and labels are stored as pixel maps. [ ECS-95 ] - Software distribution and deployment [ ECS-103 ] - Add information about how to interlink icy and EpiTools [ ECS-109 ] - Adapt parameter ranges [ ECS-110 ] - Add more image file masks [ ECS-111 ] - Compile growcellsfromseed3.cc for Linux platform Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap! This page was written by Lorenzo Gatti on 22.08.14@15.41 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Release note"},{"location":"Support/Release_Notes/#release-note","text":"We collect some useful informations on the current released versions of EpiTools and EpiTools for icy. For more live feedback on our current development workflow, please refer to our Issue manager: Access to Atlassian Jira Release Notes - EpiTools Core System - Version Version 2 stable","title":"Release note"},{"location":"Support/Release_Notes/#sub-task","text":"[ ECS-93 ] - Delete orphan tracks (white seeds found on image frame) [ ECS-114 ] - Define unique licence file associated to user [ ECS-115 ] - Create webpage to generate licence files and track users [ ECS-116 ] - Add disclaimer stating a NDA between EpiTools developers and Users [ ECS-117 ] - Preparing launchers [ ECS-121 ] - Add value in userpreferences.xml + add value in initiator script","title":"Sub-task"},{"location":"Support/Release_Notes/#technical-task","text":"[ ECS-97 ] - Tracks quality assessment through histogram representation","title":"Technical task"},{"location":"Support/Release_Notes/#bug","text":"[ ECS-9 ] - Time frames allocation [ ECS-10 ] - Bug in update values stored in uicontrols of FilePropertiesGUI.m [ ECS-12 ] - Error on closing EpiTools main window [ ECS-13 ] - Error when aborting new analysis menu on 2012b [ ECS-14 ] - Error when generating new meta file on Image Load launch on 2012b (debug in ppm is active) [ ECS-15 ] - strsplit is not supported by Matlab < R2013a [ ECS-17 ] - location saving ILabel [ ECS-18 ] - Actions menu items order [ ECS-19 ] - [Modules] CLAHE analysis step: result visualisation [ ECS-36 ] - Skelton creation is not working [ ECS-38 ] - Suppress warning [ ECS-39 ] - Update Clahe Figure Results After Accept/Discard decision [ ECS-40 ] - Analysis XML file is saved without integer index [ ECS-47 ] - Polygonal Crop is not integrated in Pipeline [ ECS-50 ] - Projection comparison produces error when accepting/discarding sandbox results [ ECS-73 ] - Log2Dev crashes due to call to embedded function @exists with a bad argument [ ECS-74 ] - Delete track (function invoked pressing \"k\" during tracking) crashes miserably [ ECS-75 ] - Tracking interface generates @drawnow() error [ ECS-76 ] - Error on closing EpiTools main GUI [ ECS-77 ] - Response time slider listener in tracking GUI retains manual correction labels [ ECS-78 ] - Save tracking session does not work when in whole view mode [ ECS-82 ] - Change URL Module GUIs to point to new wiki location [ ECS-84 ] - Initial LOG file in main directory is not deleted after copy to analysis folder [ ECS-85 ] - Error in retrieving xlim in @TrackingGUIwOldOK [ ECS-94 ] - Processor list in FilePropertiesGUI is associated to a function callback [ ECS-98 ] - delabelMode does not change its default values: will this code be executed? [ ECS-106 ] - EpiTools Crashes When User selects folder with no images [ ECS-113 ] - strsplit & strjoin are not supported before 2013a [ ECS-119 ] - Windows BAT launcher is still not working on Windows Platforms [ ECS-120 ] - Add ICY path to user preference file instead of analysis settings","title":"Bug"},{"location":"Support/Release_Notes/#improvement","text":"[ ECS-4 ] - Bug in Segmentation [ ECS-16 ] - Main window layout [ ECS-25 ] - Image Contrast needs further parametrization [ ECS-37 ] - Results of skeletonization settings object are many [ ECS-57 ] - Improvements for TrackingGUI [ ECS-102 ] - Main Image on Wiki home has a weird color scheme for segmentation image [ ECS-104 ] - Add Figure titles to debug figures in Projection Module [ ECS-105 ] - User cannot see images in initial image folder selection [ ECS-107 ] - GUIs on other platforms [ ECS-108 ] - clahe integration into segmentation","title":"Improvement"},{"location":"Support/Release_Notes/#new-feature","text":"[ ECS-7 ] - DataSpecifics - limitations [ ECS-20 ] - [GUI] @FileProperties allows the user to modify critical analysis parameters [ ECS-21 ] - Better documentation of Settings Class [ ECS-22 ] - [PROC] Missing correction step [ ECS-79 ] - Tools panel in tracking interface [ ECS-80 ] - Automatic local minimum finder for seed positioning during manual tracking [ ECS-99 ] - Activate single frame images analysis","title":"New Feature"},{"location":"Support/Release_Notes/#task","text":"[ ECS-5 ] - Type casting (uint8 uint16) [ ECS-31 ] - Create project readme file for EpiTools 0.1 [ ECS-32 ] - Re-enable testing environment [ ECS-33 ] - Re-Segmentation Capability [ ECS-34 ] - Recall analysis modules guis from JTree [ ECS-55 ] - Minimal GUI for skeleton creation [ ECS-56 ] - Add Parameter Descriptions [ ECS-58 ] - Minimal GUI for PolygonCrop [ ECS-81 ] - Compiling C functions for windows platform x64 [ ECS-83 ] - Change Logging default before release [ ECS-86 ] - Redefining segmentation & tracking methods: cell seeds and labels are stored as pixel maps. [ ECS-95 ] - Software distribution and deployment [ ECS-103 ] - Add information about how to interlink icy and EpiTools [ ECS-109 ] - Adapt parameter ranges [ ECS-110 ] - Add more image file masks [ ECS-111 ] - Compile growcellsfromseed3.cc for Linux platform","title":"Task"},{"location":"Support/Release_Notes/#do-you-think-these-informations-are-not-enough-to-help-you-drop-a-line-to-the-author-and-he-will-extend-this-tutorial-asap","text":"","title":"Do you think these informations are not enough to help you? Drop a line to the author and he will extend this tutorial asap!"},{"location":"Support/Release_Notes/#this-page-was-written-by-lorenzo-gatti-on-2208141541","text":"(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"This page was written by Lorenzo Gatti on 22.08.14@15.41"},{"location":"Support/Software_License/","text":"Software License Our software is distributed with the GPLv3 license: Copyright (c) (2015) EpiTools Team: Davide Heller (1,4) Andreas Hoppe (2) Simon Restrepo (1) Lorenzo Gatti (1,3,4) Alexander Tournier (5) Nicolas Tapon (5) Konrad Basler (1) Yanlan Mao (6) (1) Institute of Molecular Life Sciences, University of Zurich, Winterthurerstrasse 190, 8057 Zurich, Switzerland. (2) Digital Imaging Research Centre, Faculty of Science, Engineering and Computing, Kingston University, Kingston-upon-Thames, KT1 2EE, United Kingdom. (3) Institute of Applied Simulations, Z\u00fcrich University of Applied Sciences, Einsiedlerstrasse 31a, 8820 W\u00e4denswil, Switzerland. (4) SIB Swiss Institute of Bioinformatics, Quartier Sorge - Batiment Genopode, 1015 Lausanne, Switzerland. (5) Apoptosis and Proliferation Control Laboratory, Francis Crick Institute, Lincoln\u2019s Inn Fields Laboratory, 44 Lincoln\u2019s Inn Fields, London WC2A 3LY, United Kingdom. (6) MRC Laboratory for Molecular Cell Biology, University College London, Gower Street, London WC1E 6BT, United Kingdom. This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/ . This page was written by Davide Heller on 28.05.2015@13:59 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Software License"},{"location":"Support/Software_License/#software-license","text":"Our software is distributed with the GPLv3 license: Copyright (c) (2015) EpiTools Team: Davide Heller (1,4) Andreas Hoppe (2) Simon Restrepo (1) Lorenzo Gatti (1,3,4) Alexander Tournier (5) Nicolas Tapon (5) Konrad Basler (1) Yanlan Mao (6) (1) Institute of Molecular Life Sciences, University of Zurich, Winterthurerstrasse 190, 8057 Zurich, Switzerland. (2) Digital Imaging Research Centre, Faculty of Science, Engineering and Computing, Kingston University, Kingston-upon-Thames, KT1 2EE, United Kingdom. (3) Institute of Applied Simulations, Z\u00fcrich University of Applied Sciences, Einsiedlerstrasse 31a, 8820 W\u00e4denswil, Switzerland. (4) SIB Swiss Institute of Bioinformatics, Quartier Sorge - Batiment Genopode, 1015 Lausanne, Switzerland. (5) Apoptosis and Proliferation Control Laboratory, Francis Crick Institute, Lincoln\u2019s Inn Fields Laboratory, 44 Lincoln\u2019s Inn Fields, London WC2A 3LY, United Kingdom. (6) MRC Laboratory for Molecular Cell Biology, University College London, Gower Street, London WC1E 6BT, United Kingdom. This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version. This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details. You should have received a copy of the GNU General Public License along with this program. If not, see http://www.gnu.org/licenses/ . This page was written by Davide Heller on 28.05.2015@13:59 (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){ (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o), m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m) })(window,document,'script','//www.google-analytics.com/analytics.js','ga'); ga('create', 'UA-55332946-1', 'auto'); ga('send', 'pageview');","title":"Software License"}]}